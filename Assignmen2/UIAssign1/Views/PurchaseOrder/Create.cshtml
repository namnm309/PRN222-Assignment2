@model BusinessLayer.ViewModels.PurchaseOrderCreateViewModel

@{
    ViewData["Title"] = "Tạo đơn đặt xe từ hãng";
    Layout = "_DashboardLayout";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-plus-circle me-2"></i>Tạo đơn đặt xe từ hãng</h2>
    <a href="@Url.Action("Index")" class="btn btn-secondary">
        <i class="fas fa-arrow-left me-1"></i> Quay lại
    </a>
</div>

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0"><i class="fas fa-clipboard-list me-2"></i>Thông tin đơn đặt hàng</h5>
            </div>
            <div class="card-body">
                <form asp-action="Create" method="post" id="purchaseOrderForm">
                    @Html.AntiForgeryToken()
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                    <div class="mb-3">
                        <label asp-for="ProductId" class="form-label"><strong>Sản phẩm</strong></label>
                        <select asp-for="ProductId" class="form-select" id="productSelect" onchange="updateProductInfo()">
                            <option value="">-- Chọn sản phẩm --</option>
                            @foreach (var product in ViewBag.Products as List<DataAccessLayer.Entities.Product>)
                            {
                                <option value="@product.Id" 
                                        data-name="@product.Name" 
                                        data-sku="@product.Sku" 
                                        data-brand="@product.Brand?.Name"
                                        data-price="@product.Price"
                                        data-stock="@product.StockQuantity">
                                    @product.Name (@product.Brand?.Name - @product.Sku) - @product.Price.ToString("N0") VNĐ
                                </option>
                            }
                        </select>
                        <span asp-validation-for="ProductId" class="text-danger"></span>
                        <div id="productInfo" class="mt-2 text-muted small"></div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <label asp-for="RequestedQuantity" class="form-label"><strong>Số lượng</strong></label>
                            <input asp-for="RequestedQuantity" class="form-control" type="number" min="1" max="1000" onchange="calculateTotal()" />
                            <span asp-validation-for="RequestedQuantity" class="text-danger"></span>
                        </div>
                        <div class="col-md-6">
                            <label asp-for="UnitPrice" class="form-label"><strong>Đơn giá (VNĐ)</strong></label>
                            <input asp-for="UnitPrice" class="form-control" type="number" step="0.01" min="0" onchange="calculateTotal()" />
                            <span asp-validation-for="UnitPrice" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label"><strong>Thành tiền</strong></label>
                        <div class="alert alert-info" id="totalAmountDisplay">0 VNĐ</div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Reason" class="form-label"><strong>Lý do đặt hàng</strong></label>
                        <textarea asp-for="Reason" class="form-control" rows="3" placeholder="VD: Bổ sung tồn kho, đáp ứng nhu cầu khách hàng..."></textarea>
                        <span asp-validation-for="Reason" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="ExpectedDeliveryDate" class="form-label">Ngày giao dự kiến</label>
                        <input asp-for="ExpectedDeliveryDate" class="form-control" type="date" />
                        <span asp-validation-for="ExpectedDeliveryDate" class="text-danger"></span>
                        <div class="form-text">Để trống nếu chưa xác định</div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Notes" class="form-label">Ghi chú</label>
                        <textarea asp-for="Notes" class="form-control" rows="3" placeholder="Ghi chú thêm (tùy chọn)"></textarea>
                        <span asp-validation-for="Notes" class="text-danger"></span>
                    </div>

                    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                        <a href="@Url.Action("Index")" class="btn btn-secondary me-md-2">Hủy</a>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-1"></i> Tạo đơn đặt hàng
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="card">
            <div class="card-header bg-info text-white">
                <h6 class="mb-0"><i class="fas fa-info-circle me-2"></i>Hướng dẫn</h6>
            </div>
            <div class="card-body">
                <ul class="list-unstyled mb-0">
                    <li class="mb-2">
                        <i class="fas fa-check text-success me-2"></i>
                        Chọn sản phẩm cần đặt từ danh sách
                    </li>
                    <li class="mb-2">
                        <i class="fas fa-check text-success me-2"></i>
                        Nhập số lượng và đơn giá theo thỏa thuận với hãng
                    </li>
                    <li class="mb-2">
                        <i class="fas fa-check text-success me-2"></i>
                        Ghi rõ lý do đặt hàng để dễ duyệt
                    </li>
                    <li class="mb-2">
                        <i class="fas fa-check text-success me-2"></i>
                        Đơn hàng cần được Admin/EVM Staff duyệt
                    </li>
                    <li>
                        <i class="fas fa-info-circle text-info me-2"></i>
                        Liên hệ Admin nếu cần hỗ trợ
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function updateProductInfo() {
            const select = document.getElementById('productSelect');
            const productInfo = document.getElementById('productInfo');
            const unitPriceInput = document.querySelector('input[name="UnitPrice"]');
            
            if (select.value) {
                const option = select.options[select.selectedIndex];
                const name = option.getAttribute('data-name');
                const sku = option.getAttribute('data-sku');
                const brand = option.getAttribute('data-brand');
                const price = parseFloat(option.getAttribute('data-price'));
                const stock = option.getAttribute('data-stock');
                
                productInfo.innerHTML = `
                    <strong>${name}</strong><br>
                    Thương hiệu: ${brand} | SKU: ${sku}<br>
                    Tồn kho hiện tại: <span class="badge bg-info">${stock} xe</span>
                `;
                
                // Auto-fill unit price with product price
                unitPriceInput.value = price.toFixed(0);
                
                calculateTotal();
            } else {
                productInfo.innerHTML = '';
                unitPriceInput.value = '';
                calculateTotal();
            }
        }
        
        function calculateTotal() {
            const quantity = parseFloat(document.querySelector('input[name="RequestedQuantity"]').value) || 0;
            const unitPrice = parseFloat(document.querySelector('input[name="UnitPrice"]').value) || 0;
            const total = quantity * unitPrice;
            
            document.getElementById('totalAmountDisplay').textContent = total.toLocaleString('vi-VN') + ' VNĐ';
        }
        
        // Set minimum date to today
        document.addEventListener('DOMContentLoaded', function() {
            const dateInput = document.querySelector('input[name="ExpectedDeliveryDate"]');
            if (dateInput) {
                const today = new Date().toISOString().split('T')[0];
                dateInput.setAttribute('min', today);
            }
        });
    </script>
}
