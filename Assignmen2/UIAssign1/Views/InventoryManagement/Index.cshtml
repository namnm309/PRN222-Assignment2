@model List<DataAccessLayer.Entities.InventoryAllocation>
@{
    ViewData["Title"] = "Qu·∫£n l√Ω t·ªìn kho";
    Layout = "_DashboardLayout";
    var summary = ViewBag.Summary as Dictionary<string, int>;
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2 class="mb-1">Qu·∫£n l√Ω t·ªìn kho</h2>
        <p class="text-muted mb-0">Qu·∫£n l√Ω ph√¢n b·ªï v√† ƒëi·ªÅu ph·ªëi t·ªìn kho cho c√°c ƒë·∫°i l√Ω</p>
    </div>
    <div>
        <a asp-action="CreateAllocation" class="btn btn-primary">
            <i class="fas fa-plus me-2"></i>Th√™m ph√¢n b·ªï
        </a>
    </div>
</div>

<!-- Summary Cards -->
<div class="row g-3 mb-4">
    <div class="col-12 col-md-6 col-lg-3">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <p class="text-muted mb-1 small">T·ªïng ph√¢n b·ªï</p>
                        <h3 class="mb-0">@(summary?["TotalAllocations"] ?? 0)</h3>
                    </div>
                    <div class="fs-1 text-primary">üì¶</div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-12 col-md-6 col-lg-3">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <p class="text-muted mb-1 small">T·ªïng t·ªìn kho</p>
                        <h3 class="mb-0">@(summary?["TotalStock"] ?? 0)</h3>
                    </div>
                    <div class="fs-1 text-success">üöó</div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-12 col-md-6 col-lg-3">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <p class="text-muted mb-1 small">T·ªìn kho th·∫•p</p>
                        <h3 class="mb-0 text-warning">@(summary?["LowStock"] ?? 0)</h3>
                    </div>
                    <div class="fs-1 text-warning">‚ö†Ô∏è</div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-12 col-md-6 col-lg-3">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <p class="text-muted mb-1 small">H·∫øt h√†ng</p>
                        <h3 class="mb-0 text-danger">@(summary?["OutOfStock"] ?? 0)</h3>
                    </div>
                    <div class="fs-1 text-danger">üö´</div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Quick Actions -->
<div class="row g-3 mb-4">
    <div class="col-12 col-md-6 col-lg-3">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-body text-center">
                <i class="fas fa-list fa-2x text-primary mb-3"></i>
                <h6 class="mb-2">Xem t·∫•t c·∫£ ph√¢n b·ªï</h6>
                <a asp-action="Allocations" class="btn btn-outline-primary btn-sm">Xem chi ti·∫øt</a>
            </div>
        </div>
    </div>
    <div class="col-12 col-md-6 col-lg-3">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-body text-center">
                <i class="fas fa-exclamation-triangle fa-2x text-warning mb-3"></i>
                <h6 class="mb-2">C·∫£nh b√°o t·ªìn kho</h6>
                <a asp-action="StockAlerts" class="btn btn-outline-warning btn-sm">Xem c·∫£nh b√°o</a>
            </div>
        </div>
    </div>
    <div class="col-12 col-md-6 col-lg-3">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-body text-center">
                <i class="fas fa-exchange-alt fa-2x text-info mb-3"></i>
                <h6 class="mb-2">Chuy·ªÉn kho</h6>
                <a asp-action="StockTransfer" class="btn btn-outline-info btn-sm">Chuy·ªÉn kho</a>
            </div>
        </div>
    </div>
    <div class="col-12 col-md-6 col-lg-3">
        <div class="card border-0 shadow-sm h-100">
            <div class="card-body text-center">
                <i class="fas fa-history fa-2x text-secondary mb-3"></i>
                <h6 class="mb-2">L·ªãch s·ª≠ giao d·ªãch</h6>
                <a asp-action="Transactions" class="btn btn-outline-secondary btn-sm">Xem l·ªãch s·ª≠</a>
            </div>
        </div>
    </div>
</div>

<!-- Recent Allocations -->
<div class="card border-0 shadow-sm">
    <div class="card-header bg-white">
        <div class="d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Ph√¢n b·ªï t·ªìn kho g·∫ßn ƒë√¢y</h5>
            <a asp-action="Allocations" class="btn btn-outline-primary btn-sm">Xem t·∫•t c·∫£</a>
        </div>
    </div>
    <div class="card-body">
        @if (Model != null && Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>S·∫£n ph·∫©m</th>
                            <th>ƒê·∫°i l√Ω</th>
                            <th>Ph√¢n b·ªï</th>
                            <th>C√≥ s·∫µn</th>
                            <th>T·ªëi thi·ªÉu</th>
                            <th>Tr·∫°ng th√°i</th>
                            <th>C·∫≠p nh·∫≠t cu·ªëi</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var allocation in Model.Take(10))
                        {
                            <tr>
                                <td>
                                    <div>
                                        <strong>@allocation.Product?.Name</strong>
                                        <br><small class="text-muted">@allocation.Product?.Brand?.Name</small>
                                    </div>
                                </td>
                                <td>
                                    <div>
                                        <strong>@allocation.Dealer?.Name</strong>
                                        <br><small class="text-muted">@allocation.Dealer?.DealerCode</small>
                                    </div>
                                </td>
                                <td><span class="badge bg-primary">@allocation.AllocatedQuantity</span></td>
                                <td>
                                    @{
                                        var availableClass = allocation.AvailableQuantity <= 0 ? "text-danger" : 
                                                           allocation.AvailableQuantity <= allocation.MinimumStock ? "text-warning" : "text-success";
                                    }
                                    <span class="@availableClass fw-bold">@allocation.AvailableQuantity</span>
                                </td>
                                <td>@allocation.MinimumStock</td>
                                <td>
                                    @{
                                        var statusClass = allocation.Status switch
                                        {
                                            "Active" => "bg-success",
                                            "Suspended" => "bg-warning",
                                            "OutOfStock" => "bg-danger",
                                            _ => "bg-secondary"
                                        };
                                    }
                                    <span class="badge @statusClass">@allocation.Status</span>
                                </td>
                                <td>
                                    <small class="text-muted">@allocation.UpdatedAt.ToString("dd/MM/yyyy HH:mm")</small>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-4">
                <i class="fas fa-box-open fa-3x text-muted mb-3"></i>
                <p class="text-muted">Ch∆∞a c√≥ ph√¢n b·ªï t·ªìn kho n√†o</p>
                <a asp-action="CreateAllocation" class="btn btn-primary">T·∫°o ph√¢n b·ªï ƒë·∫ßu ti√™n</a>
            </div>
        }
    </div>
</div>
