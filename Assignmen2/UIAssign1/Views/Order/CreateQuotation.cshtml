@model BusinessLayer.ViewModels.OrderCreateViewModel

@{
    ViewData["Title"] = "Tạo báo giá";
}

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0"><i class="fas fa-file-invoice"></i> Tạo báo giá mới</h3>
                </div>
                <div class="card-body">
                    <!-- Thông báo stock ngay từ đầu -->
                    <div id="global-stock-alert" class="alert alert-info mb-4" style="display: none;">
                        <i class="fas fa-info-circle"></i>
                        <span id="global-stock-message">Đang kiểm tra tồn kho...</span>
                    </div>
                    
                    <form asp-action="CreateQuotation" method="post">
                        @Html.AntiForgeryToken()
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label asp-for="ProductId" class="form-label"></label>
                                <select asp-for="ProductId" class="form-select" id="product-select">
                                    <option value="">-- Chọn sản phẩm --</option>
                                    @foreach (var product in ViewBag.Products as List<DataAccessLayer.Entities.Product>)
                                    {
                                        <option value="@product.Id" data-price="@product.Price" data-stock="@product.StockQuantity">
                                            @product.Name - @product.Price.ToString("N0") VNĐ
                                        </option>
                                    }
                                </select>
                                <span asp-validation-for="ProductId" class="text-danger"></span>
                                <div id="stock-alert" class="mt-2" style="display: none;">
                                    <!-- Stock info will be displayed here -->
                                </div>
                            </div>

                            <div class="col-md-6">
                                <label asp-for="CustomerId" class="form-label"></label>
                                <div class="input-group">
                                    <select asp-for="CustomerId" class="form-select" id="customer-select">
                                        <option value="">-- Chọn khách hàng --</option>
                                        @foreach (var customer in ViewBag.Customers as List<DataAccessLayer.Entities.Customer>)
                                        {
                                            <option value="@customer.Id">
                                                @customer.FullName - @customer.PhoneNumber
                                            </option>
                                        }
                                    </select>
                                    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addCustomerModal">
                                        <i class="fas fa-plus"></i> Thêm mới
                                    </button>
                                </div>
                                <span asp-validation-for="CustomerId" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <label asp-for="Price" class="form-label"></label>
                                <input asp-for="Price" class="form-control" type="number" step="1000" id="price-input" />
                                <span asp-validation-for="Price" class="text-danger"></span>
                            </div>

                            <div class="col-md-6">
                                <label asp-for="Discount" class="form-label"></label>
                                <input asp-for="Discount" class="form-control" type="number" step="1000" id="discount-input" />
                                <span asp-validation-for="Discount" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label class="form-label"><strong>Thành tiền:</strong></label>
                            <div class="alert alert-info" id="final-amount-display">0 VNĐ</div>
                        </div>


                        <div class="mb-3">
                            <label asp-for="SalesPersonId" class="form-label"></label>
                            <select asp-for="SalesPersonId" class="form-select">
                                <option value="">-- Không chọn --</option>
                                @foreach (var staff in ViewBag.SalesStaff as List<DataAccessLayer.Entities.Users>)
                                {
                                    <option value="@staff.Id">@staff.FullName</option>
                                }
                            </select>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Description" class="form-label"></label>
                            <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Notes" class="form-label"></label>
                            <textarea asp-for="Notes" class="form-control" rows="3"></textarea>
                            <span asp-validation-for="Notes" class="text-danger"></span>
                        </div>

                        <div class="d-flex justify-content-between mt-4">
                            <a asp-action="Index" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Quay lại
                            </a>
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="fas fa-save"></i> Tạo báo giá
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Thêm Khách Hàng Mới -->
<div class="modal fade" id="addCustomerModal" tabindex="-1" aria-labelledby="addCustomerModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title" id="addCustomerModalLabel">
                    <i class="fas fa-user-plus"></i> Thêm khách hàng mới
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="customer-error-message" class="alert alert-danger d-none"></div>
                <form id="addCustomerForm">
                    @Html.AntiForgeryToken()
                    <div class="mb-3">
                        <label for="newCustomerName" class="form-label">Họ và tên <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="newCustomerName" name="fullName" required>
                    </div>
                    <div class="mb-3">
                        <label for="newCustomerEmail" class="form-label">Email <span class="text-danger">*</span></label>
                        <input type="email" class="form-control" id="newCustomerEmail" name="email" required>
                    </div>
                    <div class="mb-3">
                        <label for="newCustomerPhone" class="form-label">Số điện thoại <span class="text-danger">*</span></label>
                        <input type="tel" class="form-control" id="newCustomerPhone" name="phoneNumber" required>
                    </div>
                    <div class="mb-3">
                        <label for="newCustomerAddress" class="form-label">Địa chỉ</label>
                        <textarea class="form-control" id="newCustomerAddress" name="address" rows="2"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i> Hủy
                </button>
                <button type="button" class="btn btn-success" id="saveCustomerBtn">
                    <i class="fas fa-save"></i> Lưu khách hàng
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        // Auto-fill price and check stock when product is selected
        document.getElementById('product-select').addEventListener('change', function() {
            var selectedOption = this.options[this.selectedIndex];
            var price = selectedOption.getAttribute('data-price');
            var productId = this.value;
            
            if (price) {
                document.getElementById('price-input').value = price;
                updateFinalAmount();
            }

            // Check stock availability for dealer
            if (productId) {
                checkProductStock(productId);
            } else {
                document.getElementById('stock-alert').style.display = 'none';
                document.getElementById('global-stock-alert').style.display = 'none';
            }
        });

        // Function to check product stock via AJAX
        function checkProductStock(productId) {
            var stockAlert = document.getElementById('stock-alert');
            var globalStockAlert = document.getElementById('global-stock-alert');
            var globalStockMessage = document.getElementById('global-stock-message');
            
            // Show loading in both places
            stockAlert.innerHTML = '<div class="spinner-border spinner-border-sm" role="status"><span class="visually-hidden">Loading...</span></div> Đang kiểm tra tồn kho...';
            stockAlert.style.display = 'block';
            
            globalStockMessage.innerHTML = 'Đang kiểm tra tồn kho...';
            globalStockAlert.style.display = 'block';
            globalStockAlert.className = 'alert alert-info mb-4';
            
            fetch('@Url.Action("GetProductStock", "Order")?productId=' + productId)
                .then(response => response.json())
                .then(data => {
                    if (!data.success) {
                        stockAlert.innerHTML = '<div class="alert alert-danger mb-0"><i class="fas fa-exclamation-circle"></i> ' + data.message + '</div>';
                        globalStockMessage.innerHTML = '<i class="fas fa-exclamation-circle"></i> ' + data.message;
                        globalStockAlert.className = 'alert alert-danger mb-4';
                        return;
                    }

                    if (!data.hasStock) {
                        stockAlert.innerHTML = `
                            <div class="alert alert-warning mb-0">
                                <i class="fas fa-exclamation-triangle"></i> ${data.message}
                                <br><small>Bạn có thể đặt hàng từ hãng tại menu <strong>"Đặt xe từ hãng"</strong></small>
                            </div>`;
                        globalStockMessage.innerHTML = `<i class="fas fa-exclamation-triangle"></i> ${data.message}<br><small>Bạn có thể đặt hàng từ hãng tại menu <strong>"Đặt xe từ hãng"</strong></small>`;
                        globalStockAlert.className = 'alert alert-warning mb-4';
                    } else if (data.availableQuantity <= data.minimumStock) {
                        stockAlert.innerHTML = `
                            <div class="alert alert-warning mb-0">
                                <i class="fas fa-warehouse"></i> ${data.message}
                                <br><small class="text-danger">⚠️ Tồn kho thấp (tối thiểu: ${data.minimumStock} xe). Nên đặt hàng thêm!</small>
                            </div>`;
                        globalStockMessage.innerHTML = `<i class="fas fa-warehouse"></i> ${data.message}<br><small class="text-danger">⚠️ Tồn kho thấp (tối thiểu: ${data.minimumStock} xe). Nên đặt hàng thêm!</small>`;
                        globalStockAlert.className = 'alert alert-warning mb-4';
                    } else {
                        stockAlert.innerHTML = `
                            <div class="alert alert-success mb-0">
                                <i class="fas fa-check-circle"></i> ${data.message}
                                <br><small>Đã phân bổ: ${data.allocatedQuantity} | Đã đặt: ${data.reservedQuantity}</small>
                            </div>`;
                        globalStockMessage.innerHTML = `<i class="fas fa-check-circle"></i> ${data.message}<br><small>Đã phân bổ: ${data.allocatedQuantity} | Đã đặt: ${data.reservedQuantity}</small>`;
                        globalStockAlert.className = 'alert alert-success mb-4';
                    }
                })
                .catch(error => {
                    stockAlert.innerHTML = '<div class="alert alert-danger mb-0"><i class="fas fa-times-circle"></i> Không thể kiểm tra tồn kho</div>';
                    globalStockMessage.innerHTML = '<i class="fas fa-times-circle"></i> Không thể kiểm tra tồn kho';
                    globalStockAlert.className = 'alert alert-danger mb-4';
                });
        }

        // Calculate final amount
        function updateFinalAmount() {
            var price = parseFloat(document.getElementById('price-input').value) || 0;
            var discount = parseFloat(document.getElementById('discount-input').value) || 0;
            var finalAmount = price - discount;
            document.getElementById('final-amount-display').textContent = finalAmount.toLocaleString('vi-VN') + ' VNĐ';
        }

        document.getElementById('price-input').addEventListener('input', updateFinalAmount);
        document.getElementById('discount-input').addEventListener('input', updateFinalAmount);

        // Handle Add Customer
        document.getElementById('saveCustomerBtn').addEventListener('click', function() {
            var form = document.getElementById('addCustomerForm');
            var formData = new FormData(form);
            var errorDiv = document.getElementById('customer-error-message');
            
            // Hide previous errors
            errorDiv.classList.add('d-none');
            
            // Disable button during request
            this.disabled = true;
            this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Đang lưu...';
            
            fetch('@Url.Action("CreateCustomer", "Order")', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Add new customer to dropdown
                    var select = document.getElementById('customer-select');
                    var option = document.createElement('option');
                    option.value = data.customer.id;
                    option.text = data.customer.name + ' - ' + data.customer.phone;
                    option.selected = true;
                    select.appendChild(option);
                    
                    // Close modal
                    var modal = bootstrap.Modal.getInstance(document.getElementById('addCustomerModal'));
                    modal.hide();
                    
                    // Reset form
                    form.reset();
                } else {
                    // Show error
                    errorDiv.textContent = data.message;
                    errorDiv.classList.remove('d-none');
                }
            })
            .catch(error => {
                errorDiv.textContent = 'Có lỗi xảy ra. Vui lòng thử lại.';
                errorDiv.classList.remove('d-none');
            })
            .finally(() => {
                // Re-enable button
                this.disabled = false;
                this.innerHTML = '<i class="fas fa-save"></i> Lưu khách hàng';
            });
        });

        // Reset error message when modal is closed
        document.getElementById('addCustomerModal').addEventListener('hidden.bs.modal', function() {
            document.getElementById('customer-error-message').classList.add('d-none');
            document.getElementById('addCustomerForm').reset();
        });
    </script>
}

