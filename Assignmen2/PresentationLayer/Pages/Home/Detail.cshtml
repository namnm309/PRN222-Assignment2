@page "{id:guid}"
@model PresentationLayer.Pages.Home.DetailModel
@{
    ViewData["Title"] = Model.Product?.Name ?? "Chi tiết sản phẩm";
}

<!-- Breadcrumb -->
<nav aria-label="breadcrumb" class="bg-light py-3">
    <div class="container">
        <ol class="breadcrumb mb-0">
            <li class="breadcrumb-item">
                <a asp-page="/Home/Index" class="text-decoration-none">
                    <i class="fas fa-home me-1"></i>Trang chủ
                </a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">Chi tiết sản phẩm</li>
        </ol>
    </div>
</nav>

@if (Model.Product != null)
{
    <div class="container my-5">
        <!-- Product Header -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h1 class="h3 mb-1">@Model.Product.Name</h1>
                        <p class="text-muted mb-0">Thông tin chi tiết về xe điện @Model.Product.BrandName</p>
                    </div>
                    <div>
                        <a asp-page="/Home/Index" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left me-1"></i> Quay lại
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Product Content -->
        <div class="row g-4">
            <!-- Product Image -->
            <div class="col-12 col-lg-6">
                <div class="card border-0 shadow-sm">
                    <div class="card-body p-0">
                        @if (!string.IsNullOrWhiteSpace(Model.Product.ImageUrl))
                        {
                            <img src="@Model.Product.ImageUrl" alt="@Model.Product.Name" class="img-fluid rounded" style="width: 100%; height: 400px; object-fit: cover;" />
                        }
                        else
                        {
                            <div class="d-flex align-items-center justify-content-center text-muted" style="height: 400px; background-color: #f8f9fa;">
                                <div class="text-center">
                                    <i class="fas fa-car fa-4x mb-3"></i>
                                    <div class="h5">@Model.Product.Name</div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Product Information -->
            <div class="col-12 col-lg-6">
                <div class="card border-0 shadow-sm h-100">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <h3 class="card-title mb-0">@Model.Product.Name</h3>
                            <span class="badge bg-primary fs-6">@Model.Product.BrandName</span>
                        </div>
                        
                        <div class="text-muted mb-3">SKU: @Model.Product.Sku</div>
                        
                        <div class="mb-4">
                            <h5>Mô tả sản phẩm</h5>
                            <p class="text-muted">@(string.IsNullOrWhiteSpace(Model.Product.Description) ? "Chưa có mô tả" : Model.Product.Description)</p>
                        </div>

                        <!-- Price Info -->
                        <div class="row g-3 mb-4">
                            <div class="col-12">
                                <div class="card bg-light">
                                    <div class="card-body text-center">
                                        <div class="text-muted small">Giá bán</div>
                                        <div class="h4 text-primary fw-bold">@Model.Product.Price.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Product Specifications -->
                        <div class="mb-4">
                            <h5>Thông số kỹ thuật</h5>
                            <div class="row g-2">
                                <div class="col-6">
                                    <div class="d-flex justify-content-between">
                                        <span class="text-muted">Hãng xe:</span>
                                        <span class="fw-bold">@Model.Product.BrandName</span>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="d-flex justify-content-between">
                                        <span class="text-muted">Mã SKU:</span>
                                        <span class="fw-bold">@Model.Product.Sku</span>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="d-flex justify-content-between">
                                        <span class="text-muted">Trạng thái:</span>
                                        <span class="badge @(Model.Product.IsActive ? "bg-success" : "bg-danger")">
                                            @(Model.Product.IsActive ? "Hoạt động" : "Ngừng bán")
                                        </span>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="d-flex justify-content-between">
                                        <span class="text-muted">Cập nhật:</span>
                                        <span class="fw-bold">@Model.Product.UpdatedAt.ToString("dd/MM/yyyy")</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Action Buttons -->
                        <div class="d-grid gap-2">
                            <button type="button" class="btn btn-primary btn-lg" data-bs-toggle="modal" data-bs-target="#testDriveModal">
                                <i class="fas fa-calendar-check me-2"></i> Đăng ký lái thử
                            </button>
                            <a href="tel:1900xxxx" class="btn btn-outline-primary">
                                <i class="fas fa-phone me-2"></i> Liên hệ tư vấn
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Related Products -->
        @if (Model.RelatedProducts != null && Model.RelatedProducts.Any())
        {
            <div class="mt-5">
                <h4 class="mb-4">
                    <i class="fas fa-th me-2"></i>
                    Sản phẩm cùng hãng
                </h4>
                <div class="row g-3">
                    @foreach (var related in Model.RelatedProducts.Take(4))
                    {
                        <div class="col-12 col-md-6 col-lg-3">
                            <div class="card ev-card h-100 border-0 shadow-sm">
                                <div class="ev-card-img">
                                    @if (!string.IsNullOrWhiteSpace(related.ImageUrl))
                                    {
                                        <img src="@related.ImageUrl" alt="@related.Name" class="card-img-top" style="height: 150px; object-fit: cover;" />
                                    }
                                    else
                                    {
                                        <div class="placeholder-img d-flex align-items-center justify-content-center text-muted" style="height: 150px; background-color: #f8f9fa;">
                                            <i class="fas fa-car fa-2x"></i>
                                        </div>
                                    }
                                </div>
                                <div class="card-body">
                                    <h6 class="card-title">@related.Name</h6>
                                    <div class="text-muted small mb-2">SKU: @related.Sku</div>
                                    <div class="fw-bold text-primary">@related.Price.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</div>
                                    <a asp-page="/Home/Detail" asp-route-id="@related.Id" class="btn btn-outline-primary btn-sm w-100 mt-2">
                                        Xem chi tiết
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
        else
        {
            <div class="mt-5 text-center py-4">
                <h4 class="mb-3">
                    <i class="fas fa-th me-2"></i>
                    Sản phẩm cùng hãng
                </h4>
                <p class="text-muted">Không có sản phẩm cùng hãng</p>
            </div>
        }
    </div>
}
else
{
    <div class="container my-5">
        <div class="row justify-content-center">
            <div class="col-md-6 text-center">
                <div class="card border-0 shadow-sm">
                    <div class="card-body py-5">
                        <i class="fas fa-exclamation-triangle fa-3x text-warning mb-3"></i>
                        <h4 class="mb-3">Không tìm thấy sản phẩm</h4>
                        <p class="text-muted mb-4">Sản phẩm bạn đang tìm kiếm không tồn tại hoặc đã bị xóa.</p>
                        <a asp-page="/Home/Index" class="btn btn-primary">
                            <i class="fas fa-arrow-left me-2"></i> Về trang chủ
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<!-- Test Drive Modal -->
<div class="modal fade" id="testDriveModal" tabindex="-1" aria-labelledby="testDriveModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="testDriveModalLabel"><i class="fas fa-calendar-check me-2"></i>Đăng ký lái thử</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="testDriveForm">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label">Họ tên</label>
                            <input id="tdName" class="form-control" required />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Số điện thoại</label>
                            <input id="tdPhone" class="form-control" required />
                        </div>
                        <div class="col-md-12">
                            <label class="form-label">Email</label>
                            <input id="tdEmail" type="email" class="form-control" />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Đại lý</label>
                            <select id="tdDealer" class="form-select" required>
                                <option value="">-- Chọn đại lý --</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Xe lái thử</label>
                            <select id="tdProduct" class="form-select" required>
                                <option value="">-- Chọn xe --</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Ngày</label>
                            <input id="tdDate" type="date" class="form-control" required />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Giờ</label>
                            <input id="tdTime" type="time" class="form-control" required />
                            <div id="tdSlots" class="mt-2"></div>
                        </div>
                        <div class="col-12">
                            <label class="form-label">Ghi chú</label>
                            <textarea id="tdNotes" rows="3" class="form-control"></textarea>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="submit" form="testDriveForm" class="btn btn-primary"><i class="fas fa-paper-plane me-1"></i>Đặt lịch</button>
            </div>
        </div>
    </div>
</div>

<!-- Success Modal -->
<div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="successModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0 bg-success text-white">
                <h5 class="modal-title" id="successModalLabel">
                    <i class="fas fa-check-circle me-2"></i>Đăng ký thành công!
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center py-4">
                <div class="mb-3">
                    <i class="fas fa-check-circle text-success" style="font-size: 4rem;"></i>
                </div>
                <h4 class="text-success mb-3">Cảm ơn bạn đã đăng ký lái thử!</h4>
                <p class="text-muted mb-4">
                    Chúng tôi đã nhận được thông tin đăng ký của bạn. Đội ngũ tư vấn sẽ liên hệ lại trong thời gian sớm nhất để xác nhận lịch hẹn.
                </p>
                <div class="row text-center">
                    <div class="col-4">
                        <i class="fas fa-calendar-alt text-primary mb-2" style="font-size: 1.5rem;"></i>
                        <p class="small mb-0">Lịch hẹn</p>
                        <p class="small mb-0 text-muted">Đã được ghi nhận</p>
                    </div>
                    <div class="col-4">
                        <i class="fas fa-phone text-primary mb-2" style="font-size: 1.5rem;"></i>
                        <p class="small mb-0">Liên hệ</p>
                        <p class="small mb-0 text-muted">Trong 24h</p>
                    </div>
                    <div class="col-4">
                        <i class="fas fa-car text-primary mb-2" style="font-size: 1.5rem;"></i>
                        <p class="small mb-0">Trải nghiệm</p>
                        <p class="small mb-0 text-muted">Miễn phí</p>
                    </div>
                </div>
            </div>
            <div class="modal-footer border-0 justify-content-center">
                <button type="button" class="btn btn-success btn-lg px-5" data-bs-dismiss="modal">
                    <i class="fas fa-home me-2"></i>Về trang chủ
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
        // Function để hiển thị popup thông báo thành công
        function showSuccessModal() {
            const successModal = new bootstrap.Modal(document.getElementById('successModal'));
            successModal.show();
            
            // Tự động đóng modal sau 5 giây và reload trang
            setTimeout(function() { 
                successModal.hide();
                setTimeout(function() {
                    window.location.reload();
                }, 500); // Delay nhỏ để modal đóng hoàn toàn trước khi reload
            }, 5000);
        }

        // Load dealers via Page Handler
        fetch('@Url.Page("/Home/Index", "Dealers")')
            .then(r=>r.json())
            .then(list=>{
                const sel = document.getElementById('tdDealer');
                if (!sel) return;
                list.forEach(d=>{
                    const opt = document.createElement('option');
                    opt.value = d.id; opt.textContent = d.name;
                    sel.appendChild(opt);
                });
            });

        // Load all products via Page Handler
        fetch('@Url.Page("/Home/Detail", "Products")')
            .then(r=>r.json())
            .then(list=>{
                const sel = document.getElementById('tdProduct');
                if (!sel) return;
                list.forEach(p=>{
                    const opt = document.createElement('option');
                    opt.value = p.id; 
                    opt.textContent = p.name + ' (' + p.sku + ')';
                    sel.appendChild(opt);
                    
                    // Pre-select current product if available
                    if ('@Model.Product?.Id' && p.id === '@Model.Product?.Id') {
                        opt.selected = true;
                    }
                });
            });

        // SignalR booking modal logic
        (function() {
            const connection = new signalR.HubConnectionBuilder().withUrl('/testDriveHub').build();
            let dealerId = null;
            let productId = null;
            const form = document.getElementById('testDriveForm');
            const productSelect = document.getElementById('tdProduct');
            const dealerSelect = document.getElementById('tdDealer');
            const dateInput = document.getElementById('tdDate');
            const timeInput = document.getElementById('tdTime');
            const slotsDiv = document.getElementById('tdSlots');
            const modalEl = document.getElementById('testDriveModal');
            let heldAt = null; // Date object in local time; server converts to UTC
            let heldDealerId = null;
            let heldProductId = null;

            function groupChanged() {
                if (!dealerId || !productId || !dateInput?.value) return;
                connection.invoke('JoinGroup', dealerId, productId);
                reloadDisabledSlots();
            }

            function reloadDisabledSlots() {
                if (!dateInput?.value) return;
                const from = new Date(dateInput.value);
                const to = new Date(from.getTime() + 24*60*60*1000);
                connection.invoke('GetDisabledSlots', dealerId, productId, from, to).then(list => {
                    renderSlots(list);
                });
            }

            function releaseCurrentHold() {
                if (heldAt && heldDealerId && heldProductId) {
                    try { connection.invoke('ReleaseSlot', heldDealerId, heldProductId, heldAt); } catch {}
                }
                heldAt = null;
                heldDealerId = null;
                heldProductId = null;
                if (slotsDiv) {
                    slotsDiv.querySelectorAll('button.active').forEach(x=>x.classList.remove('active'));
                }
            }

            function renderSlots(disabled) {
                if (!dateInput?.value) return;
                const hours = ["08:00","09:30","11:00","13:30","15:00","16:30"];
                const html = hours.map(h => {
                    const dt = new Date(dateInput.value + 'T' + h + ':00');
                    const isDisabled = disabled && disabled.some(x => new Date(x).getTime() === dt.getTime());
                    return `<button type="button" class="btn btn-sm ${isDisabled?'btn-secondary':'btn-outline-primary'} m-1" ${isDisabled?'disabled':''} data-time="${h}">${h}</button>`;
                }).join('');
                slotsDiv.innerHTML = html;
                slotsDiv.querySelectorAll('button').forEach(b => {
                    b.addEventListener('click', () => {
                        // release previous hold if any
                        if (heldAt) {
                            releaseCurrentHold();
                        }
                        timeInput.value = b.dataset.time;
                        slotsDiv.querySelectorAll('button').forEach(x=>x.classList.remove('active'));
                        b.classList.add('active');
                        // hold slot when select
                        if (dealerId && productId && dateInput?.value && timeInput?.value) {
                            const scheduled = new Date(dateInput.value + 'T' + timeInput.value + ':00');
                            connection.invoke('HoldSlot', dealerId, productId, scheduled).then(ok => {
                                if (!ok) {
                                    b.classList.remove('active');
                                    alert('Khung giờ vừa được người khác giữ/đặt. Vui lòng chọn giờ khác.');
                                    reloadDisabledSlots();
                                }
                                else {
                                    heldAt = scheduled;
                                    heldDealerId = dealerId;
                                    heldProductId = productId;
                                }
                            });
                        }
                    });
                });
            }

            connection.on('SlotBooked', (iso) => {
                if (!dateInput?.value) return;
                const booked = new Date(iso);
                const cur = new Date(dateInput.value);
                if (booked.toDateString() === cur.toDateString()) {
                    reloadDisabledSlots();
                }
                if (heldAt && booked.getTime() === heldAt.getTime()) {
                    // our hold has turned into booking (either us or someone else)
                    heldAt = null; heldDealerId = null; heldProductId = null;
                }
            });

            connection.on('SlotHeld', (iso) => {
                if (!dateInput?.value) return;
                const held = new Date(iso);
                const cur = new Date(dateInput.value);
                if (held.toDateString() === cur.toDateString()) {
                    reloadDisabledSlots();
                }
            });

            connection.on('SlotReleased', (iso) => {
                if (!dateInput?.value) return;
                const rel = new Date(iso);
                const cur = new Date(dateInput.value);
                if (rel.toDateString() === cur.toDateString()) {
                    reloadDisabledSlots();
                }
            });

            connection.start();

            dealerSelect?.addEventListener('change', () => {
                // release any existing hold tied to previous dealer/product
                releaseCurrentHold();
                dealerId = dealerSelect.value;
                groupChanged();
            });
            productSelect?.addEventListener('change', () => {
                releaseCurrentHold();
                productId = productSelect.value;
                groupChanged();
            });
            dateInput?.addEventListener('change', () => {
                releaseCurrentHold();
                groupChanged();
            });

            // auto release when modal closes
            if (modalEl) {
                modalEl.addEventListener('hide.bs.modal', () => {
                    releaseCurrentHold();
                });
            }

            form?.addEventListener('submit', (e) => {
                e.preventDefault();
                if (!dealerId || !productId || !dateInput?.value || !timeInput?.value) return;
                const scheduled = new Date(dateInput.value + 'T' + timeInput.value + ':00');
                const req = {
                    customerName: document.getElementById('tdName').value,
                    customerPhone: document.getElementById('tdPhone').value,
                    customerEmail: document.getElementById('tdEmail').value,
                    notes: document.getElementById('tdNotes').value,
                    productId: productId,
                    dealerId: dealerId,
                    scheduledDate: scheduled
                };
                connection.invoke('BookSlot', req).then(res => {
                    if (res?.success) {
                        const modal = bootstrap.Modal.getInstance(document.getElementById('testDriveModal'));
                        modal?.hide();
                        
                        // Hiển thị popup thông báo thành công
                        showSuccessModal();
                    } else {
                        alert(res?.error || 'Có lỗi xảy ra khi đăng ký lái thử');
                    }
                }).catch(err => {
                    console.error('SignalR error:', err);
                    alert('Có lỗi xảy ra khi kết nối. Vui lòng thử lại.');
                });
            });
        })();
    </script>
}
