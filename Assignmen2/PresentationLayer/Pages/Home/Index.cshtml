@page
@model PresentationLayer.Pages.Home.IndexModel
@{
    ViewData["Title"] = "Electric Vehicle Store";
}

@* Success Message Display *@
@if (TempData["Msg"] != null)
{
    <div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="successModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content border-0 shadow-lg">
                <div class="modal-header bg-success text-white border-0">
                    <h5 class="modal-title" id="successModalLabel">
                        <i class="fas fa-check-circle me-2"></i>Thành công!
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body text-center py-4">
                    <div class="mb-3">
                        <i class="fas fa-calendar-check text-success" style="font-size: 3rem;"></i>
                    </div>
                    <h6 class="fw-bold mb-3">@TempData["Msg"]</h6>
                    <p class="text-muted mb-0">
                        Đội ngũ tư vấn của chúng tôi sẽ liên hệ với bạn trong thời gian sớm nhất để xác nhận lịch hẹn.
                    </p>
                </div>
                <div class="modal-footer border-0 justify-content-center">
                    <button type="button" class="btn btn-success px-4" data-bs-dismiss="modal">
                        <i class="fas fa-thumbs-up me-2"></i>Tuyệt vời!
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@section FullWidthTop {
<div id="homeCarousel" class="carousel slide home-hero mb-4" data-bs-ride="carousel" data-bs-interval="5000">
    <div class="carousel-indicators">
        <button type="button" data-bs-target="#homeCarousel" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
        <button type="button" data-bs-target="#homeCarousel" data-bs-slide-to="1" aria-label="Slide 2"></button>
        <button type="button" data-bs-target="#homeCarousel" data-bs-slide-to="2" aria-label="Slide 3"></button>
    </div>
    <div class="carousel-inner">
        <div class="carousel-item active">
            <div class="home-hero-slide slide-1 d-flex align-items-center text-center">
                <div class="container">
                    <h2 class="display-6 fw-bold text-dark">Khám phá tương lai xe điện</h2>
                    <p class="lead text-muted mb-3">Hiệu năng, tiết kiệm và thân thiện môi trường</p>
                    <a href="#" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#testDriveModal">Đăng ký lái thử</a>
                </div>
            </div>
        </div>
        <div class="carousel-item">
            <div class="home-hero-slide slide-2 d-flex align-items-center text-center">
                <div class="container">
                    <h2 class="display-6 fw-bold text-dark">Ưu đãi hấp dẫn</h2>
                    <p class="lead text-muted mb-3">Nâng cấp lên xe điện với chi phí tốt nhất</p>
                    <a asp-page="/Home/Privacy" class="btn btn-outline-primary">Xem chi tiết</a>
                </div>
            </div>
        </div>
        <div class="carousel-item">
            <div class="home-hero-slide slide-3 d-flex align-items-center text-center">
                <div class="container">
                    <h2 class="display-6 fw-bold text-dark">Sạc nhanh mọi nơi</h2>
                    <p class="lead text-muted mb-3">Hệ sinh thái trạm sạc tiện lợi, an toàn</p>
                    <a asp-page="/VehicleSearch/Index" class="btn btn-primary">Tìm trạm sạc</a>
                </div>
            </div>
        </div>
    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="#homeCarousel" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#homeCarousel" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
    </button>
    </div>
</div>
}

@section FullWidthContent {
<!-- Why Choose Us cards (moved up to match old UI) -->
<div class="container-fluid bg-gradient-section py-5 mt-5">
    <div class="container">
        <div class="text-center mb-5">
            <h2 class="fw-bold mb-3">
                <i class="fas fa-award text-warning me-2"></i>
                Tại sao chọn xe điện?
            </h2>
            <p class="text-muted">Trải nghiệm công nghệ tương lai ngay hôm nay</p>
        </div>
        <div class="row g-4">
            <div class="col-12 col-md-6 col-lg-3">
                <div class="stats-card text-center p-4">
                    <div class="stats-icon mb-3">
                        <i class="fas fa-tachometer-alt"></i>
                    </div>
                    <h3 class="fw-bold text-primary mb-2">0-100km/h</h3>
                    <p class="text-muted mb-0">Tăng tốc chỉ trong 5.8 giây</p>
                </div>
            </div>
            <div class="col-12 col-md-6 col-lg-3">
                <div class="stats-card text-center p-4">
                    <div class="stats-icon mb-3">
                        <i class="fas fa-road"></i>
                    </div>
                    <h3 class="fw-bold text-primary mb-2">400km+</h3>
                    <p class="text-muted mb-0">Quãng đường di chuyển tối đa</p>
                </div>
            </div>
            <div class="col-12 col-md-6 col-lg-3">
                <div class="stats-card text-center p-4">
                    <div class="stats-icon mb-3">
                        <i class="fas fa-charging-station"></i>
                    </div>
                    <h3 class="fw-bold text-primary mb-2">2,000+</h3>
                    <p class="text-muted mb-0">Trạm sạc trên toàn quốc</p>
                </div>
            </div>
            <div class="col-12 col-md-6 col-lg-3">
                <div class="stats-card text-center p-4">
                    <div class="stats-icon mb-3">
                        <i class="fas fa-shield-alt"></i>
                    </div>
                    <h3 class="fw-bold text-primary mb-2">10 năm</h3>
                    <p class="text-muted mb-0">Bảo hành pin và động cơ</p>
                </div>
            </div>
        </div>
    </div>

</div>

<!-- Products Section -->
@if (Model.Products != null && Model.Products.Any())
{
<div class="container-fluid px-0 py-4 pt-md-2">
    <div class="container">
        <div class="row mb-4 align-items-end home-section-title">
            <div class="col-12 col-md-7 col-lg-8">
                <h2 class="h4 mb-2">
                    <i class="fas fa-star text-warning me-2"></i>
                    Sản phẩm nổi bật
                </h2>
                <p class="text-muted mb-0">Tìm và so sánh các mẫu xe điện từ nhiều hãng uy tín</p>
            </div>
            <div class="col-12 col-md-5 col-lg-4 mt-3 mt-md-0">
                <form method="get">
                    <div class="input-group">
                        <input type="text" name="search" value="@Model.Search" class="form-control" placeholder="Tìm theo tên xe, mã SKU, hãng...">
                        <button class="btn btn-primary" type="submit">Tìm kiếm</button>
                    </div>
                </form>
            </div>
        </div>

        <div class="product-slider position-relative">
    <div id="homeProducts" class="row g-3 flex-nowrap product-row">
        @foreach (var item in Model.Products)
        {
            <div class="col-6 col-md-4 col-lg-3 col-xl-2-4 flex-shrink-0">
                <div class="card ev-card h-100">
                    <div class="ev-card-img">
                        @if (!string.IsNullOrWhiteSpace(item.ImageUrl))
                        {
                            <img src="@item.ImageUrl" alt="@item.Name" class="card-img-top" style="height: 200px; object-fit: cover;" />
                        }
                        else
                        {
                            <div class="placeholder-img d-flex align-items-center justify-content-center text-muted" style="height: 200px; background-color: #f8f9fa; border-bottom: 1px solid #dee2e6;">
                                <div class="text-center">
                                    <i class="fas fa-car fa-2x mb-2"></i>
                                    <div class="small">@item.Name</div>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title mb-1">@item.Name</h5>
                        <div class="text-muted small mb-2">@item.BrandName • SKU: @item.Sku</div>
                        <p class="card-text text-truncate-2">@item.Description</p>
                        <div class="mt-auto">
                            <div class="price fw-bold text-primary fs-5 mb-2">@item.Price.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</div>
                            <a asp-page="/Products/Detail" asp-route-id="@item.Id" class="btn btn-outline-primary btn-sm w-100">Xem chi tiết</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <button id="productPrev" class="product-control product-prev" type="button">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
    </button>
    <button id="productNext" class="product-control product-next" type="button">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
    </button>
        </div>
        <div class="d-flex justify-content-center mt-4">
            <a href="#" class="btn btn-primary btn-lg rounded-pill px-5" data-bs-toggle="modal" data-bs-target="#testDriveModal">
                <i class="fas fa-calendar-check me-2"></i> Đăng ký lái thử
            </a>
        </div>
    </div>

</div>
}
else
{
<div class="container my-4">
    <div class="d-flex justify-content-center">
        <a asp-page="/Products/Index" class="btn btn-primary rounded-pill px-4">
            <i class="fas fa-th me-2"></i> Xem tất cả sản phẩm
        </a>
    </div>
</div>
}

<!-- Call to Action Section -->
<div class="container my-5 py-5">
    <div class="cta-section text-center p-5 rounded-4">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <h2 class="display-5 fw-bold text-white mb-3">
                    Sẵn sàng trải nghiệm xe điện?
                </h2>
                <p class="lead text-white mb-4">
                    Đăng ký lái thử miễn phí ngay hôm nay và cảm nhận sự khác biệt
                </p>
                <div class="d-flex gap-3 justify-content-center flex-wrap">
                    <a href="#" class="btn btn-light btn-lg rounded-pill px-5" data-bs-toggle="modal" data-bs-target="#testDriveModal">
                        <i class="fas fa-calendar-check me-2"></i> Đăng ký lái thử
                    </a>
                    <a href="tel:1900xxxx" class="btn btn-outline-light btn-lg rounded-pill px-5">
                        <i class="fas fa-phone me-2"></i> Liên hệ tư vấn
                    </a>
                </div>
            </div>
        </div>
    </div>

</div>
}

<!-- Test Drive Modal -->
<div class="modal fade" id="testDriveModal" tabindex="-1" aria-labelledby="testDriveModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="testDriveModalLabel"><i class="fas fa-calendar-check me-2"></i>Đăng ký lái thử</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="testDriveForm">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label">Họ tên</label>
                            <input id="tdName" class="form-control" required />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Số điện thoại</label>
                            <input id="tdPhone" class="form-control" required />
                        </div>
                        <div class="col-md-12">
                            <label class="form-label">Email</label>
                            <input id="tdEmail" type="email" class="form-control" />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Đại lý</label>
                            <select id="tdDealer" class="form-select" required>
                                <option value="">-- Chọn đại lý --</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Xe lái thử</label>
                            <select id="tdProduct" class="form-select" required>
                                <option value="">-- Chọn xe --</option>
                                @if (Model.Products != null)
                                {
                                    foreach (var p in Model.Products)
                                    {
                                        <option value="@p.Id">@p.Name (@p.Sku)</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Ngày</label>
                            <input id="tdDate" type="date" class="form-control" required />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Giờ</label>
                            <input id="tdTime" type="time" class="form-control" required />
                            <div id="tdSlots" class="mt-2"></div>
                        </div>
                        <div class="col-12">
                            <label class="form-label">Ghi chú</label>
                            <textarea id="tdNotes" rows="3" class="form-control"></textarea>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="submit" form="testDriveForm" class="btn btn-primary"><i class="fas fa-paper-plane me-1"></i>Đặt lịch</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const productRow = document.getElementById('homeProducts');
            const prevBtn = document.getElementById('productPrev');
            const nextBtn = document.getElementById('productNext');

            if (productRow && prevBtn && nextBtn) {
                const scrollAmount = 300;
                prevBtn.addEventListener('click', function(e) {
                    e.preventDefault();
                    productRow.scrollBy({ left: -scrollAmount, behavior: 'smooth' });
                });
                nextBtn.addEventListener('click', function(e) {
                    e.preventDefault();
                    productRow.scrollBy({ left: scrollAmount, behavior: 'smooth' });
                });

                function updateButtons() {
                    const scrollLeft = productRow.scrollLeft;
                    const maxScroll = productRow.scrollWidth - productRow.clientWidth;
                    if (scrollLeft > 10) {
                        prevBtn.style.opacity = '1';
                        prevBtn.style.visibility = 'visible';
                    } else {
                        prevBtn.style.opacity = '0.3';
                        prevBtn.style.visibility = 'visible';
                    }
                    if (scrollLeft < maxScroll - 10) {
                        nextBtn.style.opacity = '1';
                        nextBtn.style.visibility = 'visible';
                    } else {
                        nextBtn.style.opacity = '0.3';
                        nextBtn.style.visibility = 'visible';
                    }
                }
                prevBtn.style.display = 'flex';
                nextBtn.style.display = 'flex';
                prevBtn.style.pointerEvents = 'auto';
                nextBtn.style.pointerEvents = 'auto';
                productRow.addEventListener('scroll', updateButtons);
                updateButtons();
            }
        });

        @if (TempData["Msg"] != null)
        {
            <text>
            var successModal = new bootstrap.Modal(document.getElementById('successModal'));
            successModal.show();
            setTimeout(function() { successModal.hide(); }, 5000);
            </text>
        }
        // Load dealers via Page Handler
        fetch('@Url.Page("/Home/Index", "Dealers")')
            .then(r=>r.json())
            .then(list=>{
                const sel = document.getElementById('tdDealer');
                if (!sel) return;
                list.forEach(d=>{
                    const opt = document.createElement('option');
                    opt.value = d.id; opt.textContent = d.name;
                    sel.appendChild(opt);
                });
            });

        // SignalR booking modal logic
        (function() {
            const connection = new signalR.HubConnectionBuilder().withUrl('/testDriveHub').build();
            let dealerId = null;
            let productId = null;
            const form = document.getElementById('testDriveForm');
            const productSelect = document.getElementById('tdProduct');
            const dealerSelect = document.getElementById('tdDealer');
            const dateInput = document.getElementById('tdDate');
            const timeInput = document.getElementById('tdTime');
            const slotsDiv = document.getElementById('tdSlots');
            const modalEl = document.getElementById('testDriveModal');
            let heldAt = null; // Date object in local time; server converts to UTC
            let heldDealerId = null;
            let heldProductId = null;

            function groupChanged() {
                if (!dealerId || !productId || !dateInput?.value) return;
                connection.invoke('JoinGroup', dealerId, productId);
                reloadDisabledSlots();
            }

            function reloadDisabledSlots() {
                if (!dateInput?.value) return;
                const from = new Date(dateInput.value);
                const to = new Date(from.getTime() + 24*60*60*1000);
                connection.invoke('GetDisabledSlots', dealerId, productId, from, to).then(list => {
                    renderSlots(list);
                });
            }

            function releaseCurrentHold() {
                if (heldAt && heldDealerId && heldProductId) {
                    try { connection.invoke('ReleaseSlot', heldDealerId, heldProductId, heldAt); } catch {}
                }
                heldAt = null;
                heldDealerId = null;
                heldProductId = null;
                if (slotsDiv) {
                    slotsDiv.querySelectorAll('button.active').forEach(x=>x.classList.remove('active'));
                }
            }

            function renderSlots(disabled) {
                if (!dateInput?.value) return;
                const hours = ["08:00","09:30","11:00","13:30","15:00","16:30"];
                const html = hours.map(h => {
                    const dt = new Date(dateInput.value + 'T' + h + ':00');
                    const isDisabled = disabled && disabled.some(x => new Date(x).getTime() === dt.getTime());
                    return `<button type="button" class="btn btn-sm ${isDisabled?'btn-secondary':'btn-outline-primary'} m-1" ${isDisabled?'disabled':''} data-time="${h}">${h}</button>`;
                }).join('');
                slotsDiv.innerHTML = html;
                slotsDiv.querySelectorAll('button').forEach(b => {
                    b.addEventListener('click', () => {
                        // release previous hold if any
                        if (heldAt) {
                            releaseCurrentHold();
                        }
                        timeInput.value = b.dataset.time;
                        slotsDiv.querySelectorAll('button').forEach(x=>x.classList.remove('active'));
                        b.classList.add('active');
                        // hold slot when select
                        if (dealerId && productId && dateInput?.value && timeInput?.value) {
                            const scheduled = new Date(dateInput.value + 'T' + timeInput.value + ':00');
                            connection.invoke('HoldSlot', dealerId, productId, scheduled).then(ok => {
                                if (!ok) {
                                    b.classList.remove('active');
                                    alert('Khung giờ vừa được người khác giữ/đặt. Vui lòng chọn giờ khác.');
                                    reloadDisabledSlots();
                                }
                                else {
                                    heldAt = scheduled;
                                    heldDealerId = dealerId;
                                    heldProductId = productId;
                                }
                            });
                        }
                    });
                });
            }

            connection.on('SlotBooked', (iso) => {
                if (!dateInput?.value) return;
                const booked = new Date(iso);
                const cur = new Date(dateInput.value);
                if (booked.toDateString() === cur.toDateString()) {
                    reloadDisabledSlots();
                }
                if (heldAt && booked.getTime() === heldAt.getTime()) {
                    // our hold has turned into booking (either us or someone else)
                    heldAt = null; heldDealerId = null; heldProductId = null;
                }
            });

            connection.on('SlotHeld', (iso) => {
                if (!dateInput?.value) return;
                const held = new Date(iso);
                const cur = new Date(dateInput.value);
                if (held.toDateString() === cur.toDateString()) {
                    reloadDisabledSlots();
                }
            });

            connection.on('SlotReleased', (iso) => {
                if (!dateInput?.value) return;
                const rel = new Date(iso);
                const cur = new Date(dateInput.value);
                if (rel.toDateString() === cur.toDateString()) {
                    reloadDisabledSlots();
                }
            });

            connection.start();

            dealerSelect?.addEventListener('change', () => {
                // release any existing hold tied to previous dealer/product
                releaseCurrentHold();
                dealerId = dealerSelect.value;
                groupChanged();
            });
            productSelect?.addEventListener('change', () => {
                releaseCurrentHold();
                productId = productSelect.value;
                groupChanged();
            });
            dateInput?.addEventListener('change', () => {
                releaseCurrentHold();
                groupChanged();
            });

            // auto release when modal closes
            if (modalEl) {
                modalEl.addEventListener('hide.bs.modal', () => {
                    releaseCurrentHold();
                });
            }

            form?.addEventListener('submit', (e) => {
                e.preventDefault();
                if (!dealerId || !productId || !dateInput?.value || !timeInput?.value) return;
                const scheduled = new Date(dateInput.value + 'T' + timeInput.value + ':00');
                const req = {
                    customerName: document.getElementById('tdName').value,
                    customerPhone: document.getElementById('tdPhone').value,
                    customerEmail: document.getElementById('tdEmail').value,
                    notes: document.getElementById('tdNotes').value,
                    productId: productId,
                    dealerId: dealerId,
                    scheduledDate: scheduled
                };
                connection.invoke('BookSlot', req).then(res => {
                    if (res?.success) {
                        const modal = bootstrap.Modal.getInstance(document.getElementById('testDriveModal'));
                        modal?.hide();
                        window.location.reload();
                    } else {
                        alert(res?.error || 'Không thể tạo lịch hẹn');
                    }
                });
            });
        })();
    </script>
}


