<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - EVMXanh Dashboard Panel</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/dashboard.css" asp-append-version="true" />
    @await RenderSectionAsync("Styles", required: false)
</head>
<body class="dashboard-body" style="font-family: 'Inter', sans-serif;">
    <div class="d-flex" id="wrapper">
        <div class="sidebar-modern" id="sidebar-wrapper">
            <div class="sidebar-brand">
                <div class="brand-icon">
                    <i class="fas fa-charging-station"></i>
                </div>
                <div class="brand-text">
                    <strong>EVMXanh</strong>
                    <small>Dashboard Panel</small>
                </div>
            </div>
            <div class="sidebar-menu">
                @{
                    // Lấy role từ Session để truyền cho partial qua ViewData
                    var roleString = Context.Session.GetString("UserRole");
                    ViewData["UserRole"] = roleString;
                }
                @await Html.PartialAsync("_DashboardMenu")
            </div>
            <div class="sidebar-footer">
                <div class="user-profile">
                    <div class="user-avatar">
                        <i class="fas fa-user-circle"></i>
                    </div>
                    <div class="user-info">
                        <strong>@ViewData["UserName"]</strong>
                        <small>@ViewData["UserRole"]</small>
                        @if (!string.IsNullOrEmpty(ViewData["DealerName"]?.ToString()))
                        {
                            <small class="text-light fst-italic" style="opacity: 0.8;">@ViewData["DealerName"]</small>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div id="page-content-wrapper">
            <nav class="topbar">
                <div class="container-fluid">
                    <div class="d-flex justify-content-between align-items-center">
                        <button class="btn-toggle-sidebar" id="sidebarToggle">
                            <i class="fas fa-bars"></i>
                        </button>
                        <div class="topbar-actions d-flex align-items-center gap-3">
                            <a asp-page="/Home/Index" class="btn btn-sm btn-light">
                                <i class="fas fa-home me-1"></i> Trang chủ
                            </a>
                            <button type="button" class="btn btn-sm btn-outline-danger" onclick="confirmLogout()">
                                <i class="fas fa-sign-out-alt me-1"></i> Đăng xuất
                            </button>
                        </div>
                    </div>
                </div>
            </nav>

            <div class="container-fluid p-4">
                @RenderBody()
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation-unobtrusive@3.2.12/dist/jquery.validate.unobtrusive.min.js"></script>
    <script>
        document.getElementById('sidebarToggle').addEventListener('click', function () {
            document.getElementById('wrapper').classList.toggle('toggled');
        });

        function confirmLogout() {
            // Chỉ hiện popup xác nhận, không có thông báo console
            if (confirm('Bạn có chắc chắn muốn đăng xuất?')) {
                // Chuyển hướng đến trang logout
                window.location.href = '/Account/Logout';
            }
        }

        // Sidebar Active State Logic
        document.addEventListener('DOMContentLoaded', function() {
            const currentPath = window.location.pathname.toLowerCase();
            const menuItems = document.querySelectorAll('.menu-item');
            
            // Loại bỏ class active khỏi tất cả menu items
            menuItems.forEach(item => {
                item.classList.remove('active');
            });
            
            // Tìm menu item phù hợp nhất
            let bestMatch = null;
            let bestMatchLength = 0;
            
            menuItems.forEach(item => {
                const href = item.getAttribute('href');
                if (href) {
                    const itemPath = href.toLowerCase();
                    
                    // Exact match - ưu tiên cao nhất
                    if (currentPath === itemPath) {
                        bestMatch = item;
                        bestMatchLength = itemPath.length;
                    }
                    // Partial match - chỉ khi chưa có exact match
                    else if (!bestMatch && currentPath.startsWith(itemPath) && itemPath.length > bestMatchLength) {
                        bestMatch = item;
                        bestMatchLength = itemPath.length;
                    }
                }
            });
            
            // Thêm class active vào menu item phù hợp nhất
            if (bestMatch) {
                bestMatch.classList.add('active');
            }
        });

        // Ngăn scroll lên đầu trang khi bấm menu item
        document.addEventListener('DOMContentLoaded', function() {
            const menuItems = document.querySelectorAll('.menu-item');
            
            menuItems.forEach(item => {
                item.addEventListener('click', function(e) {
                    // Lưu vị trí scroll hiện tại
                    const currentScrollTop = window.pageYOffset || document.documentElement.scrollTop;
                    
                    // Nếu đang ở cùng trang, ngăn hành vi mặc định và giữ vị trí scroll
                    const href = this.getAttribute('href');
                    if (href && window.location.pathname === href) {
                        e.preventDefault();
                        
                        // Giữ nguyên vị trí scroll
                        setTimeout(() => {
                            window.scrollTo(0, currentScrollTop);
                        }, 0);
                        
                        return false;
                    }
                });
            });
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>

