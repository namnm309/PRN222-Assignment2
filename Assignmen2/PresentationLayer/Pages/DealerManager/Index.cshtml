@page
@model PresentationLayer.Pages.DealerManager.IndexModel
@{
	Layout = "/Pages/Shared/_DashboardLayout.cshtml";
	ViewData["Title"] = "Dealer Manager Dashboard";
}

<div class="container-fluid">
	<!-- Header Section -->
	<div class="row mb-4">
		<div class="col-12">
			<div class="card border-0 shadow-sm" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
				<div class="card-body text-white p-4">
					<div class="d-flex align-items-center justify-content-between">
						<div>
							<h2 class="mb-2 fw-bold">@Model.DealerName</h2>
							<p class="mb-0 opacity-75 vn-date"><i class="fas fa-calendar-alt me-2"></i>@DateTime.Now.ToString("dddd, dd/MM/yyyy", new System.Globalization.CultureInfo("vi-VN"))</p>
						</div>
						<div class="text-end">
							<div class="fs-5 fw-semibold">Dashboard</div>
							<div class="small opacity-75">Tổng quan hoạt động đại lý</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

	<!-- KPI Cards -->
	<div class="row g-3 mb-4">
		<div class="col-xl-3 col-md-6">
			@{
				ViewData["Title"] = "Doanh thu tháng";
				ViewData["Value"] = Model.MonthlyRevenue.ToString("N0", new System.Globalization.CultureInfo("vi-VN"));
				ViewData["Unit"] = "VND";
				ViewData["IconClass"] = "fas fa-chart-line";
				ViewData["GradientClass"] = "linear-gradient(135deg, #667eea 0%, #764ba2 100%)";
				ViewData["ProgressPercent"] = 75;
				ViewData["SubText"] = "<i class=\"fas fa-arrow-up me-1\"></i>12% so với tháng trước";
			}
			<partial name="_KpiCard" />
		</div>

		<div class="col-xl-3 col-md-6">
			@{
				ViewData["Title"] = "Lái thử tháng";
				ViewData["Value"] = Model.MonthlyTestDrives.ToString();
				ViewData["Unit"] = "Lịch hẹn";
				ViewData["IconClass"] = "fas fa-calendar-check";
				ViewData["GradientClass"] = "linear-gradient(135deg, #f093fb 0%, #f5576c 100%)";
				ViewData["ProgressPercent"] = 45;
				ViewData["SubText"] = "<i class=\"fas fa-info-circle me-1\"></i>Lịch đang chờ xử lý";
			}
			<partial name="_KpiCard" />
		</div>

		<div class="col-xl-3 col-md-6">
			@{
				ViewData["Title"] = "Khách hàng mới";
				ViewData["Value"] = Model.NewCustomers.ToString();
				ViewData["Unit"] = "Khách hàng";
				ViewData["IconClass"] = "fas fa-users";
				ViewData["GradientClass"] = "linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)";
				ViewData["ProgressPercent"] = 88;
				ViewData["SubText"] = "<i class=\"fas fa-user-plus me-1\"></i>Tháng này";
			}
			<partial name="_KpiCard" />
		</div>

		<div class="col-xl-3 col-md-6">
			@{
				ViewData["Title"] = "Đơn hàng tháng";
				ViewData["Value"] = Model.MonthlyOrders.ToString();
				ViewData["Unit"] = "Đơn hàng";
				ViewData["IconClass"] = "fas fa-shopping-cart";
				ViewData["GradientClass"] = "linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)";
				ViewData["ProgressPercent"] = 92;
				ViewData["SubText"] = "<i class=\"fas fa-check-circle me-1\"></i>Đã hoàn thành 70%";
			}
			<partial name="_KpiCard" />
		</div>
	</div>

	<!-- Charts Section -->
	<div class="row g-3 mb-4">
		<div class="col-lg-6">
			<div class="card border-0 shadow-sm">
				<div class="card-header bg-white border-0 py-3">
					<h5 class="mb-0"><i class="fas fa-chart-bar me-2 text-primary"></i>Doanh số 6 tháng gần nhất</h5>
				</div>
				<div class="card-body">
					<canvas id="salesChart" height="300"></canvas>
				</div>
			</div>
		</div>
		<div class="col-lg-6">
			<div class="card border-0 shadow-sm">
				<div class="card-header bg-white border-0 py-3">
					<h5 class="mb-0"><i class="fas fa-chart-line me-2 text-success"></i>Xu hướng đơn hàng theo tuần</h5>
				</div>
				<div class="card-body">
					<canvas id="ordersChart" height="300"></canvas>
				</div>
			</div>
		</div>
	</div>

	<div class="row g-3 mb-4">
		<div class="col-lg-6">
			<div class="card border-0 shadow-sm">
				<div class="card-header bg-white border-0 py-3">
					<h5 class="mb-0"><i class="fas fa-chart-pie me-2 text-warning"></i>Phân bổ tồn kho theo danh mục</h5>
				</div>
				<div class="card-body">
					<canvas id="inventoryChart" height="300"></canvas>
				</div>
			</div>
		</div>
		<div class="col-lg-6">
			<div class="card border-0 shadow-sm">
				<div class="card-header bg-white border-0 py-3">
					<h5 class="mb-0"><i class="fas fa-exclamation-triangle me-2 text-danger"></i>Công nợ khách hàng</h5>
				</div>
				<div class="card-body">
					<canvas id="debtChart" height="300"></canvas>
				</div>
			</div>
		</div>
	</div>

	<!-- Quick Actions -->
	<div class="row g-3 mb-4">
		<div class="col-md-3">
			<a asp-page="/DealerManager/Orders/Create" class="text-decoration-none">
				<div class="card border-0 shadow-sm h-100 hover-lift">
					<div class="card-body text-center p-4">
						<div class="mb-3">
							<div class="p-3 rounded-circle d-inline-block" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
								<i class="fas fa-file-invoice-dollar fs-2 text-white"></i>
							</div>
						</div>
						<h5 class="mb-2 fw-semibold">Tạo báo giá</h5>
						<p class="text-muted small mb-0">Tạo báo giá nhanh chóng</p>
					</div>
				</div>
			</a>
		</div>
		<div class="col-md-3">
			<a asp-page="/DealerManager/PurchaseOrders/Create" class="text-decoration-none">
				<div class="card border-0 shadow-sm h-100 hover-lift">
					<div class="card-body text-center p-4">
						<div class="mb-3">
							<div class="p-3 rounded-circle d-inline-block" style="background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);">
								<i class="fas fa-box fs-2 text-white"></i>
							</div>
						</div>
						<h5 class="mb-2 fw-semibold">Đặt xe từ hãng</h5>
						<p class="text-muted small mb-0">Tạo đơn đặt hàng mới</p>
					</div>
				</div>
			</a>
		</div>
		<div class="col-md-3">
			<a asp-page="/DealerManager/Customers/Create" class="text-decoration-none">
				<div class="card border-0 shadow-sm h-100 hover-lift">
					<div class="card-body text-center p-4">
						<div class="mb-3">
							<div class="p-3 rounded-circle d-inline-block" style="background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);">
								<i class="fas fa-user-plus fs-2 text-white"></i>
							</div>
						</div>
						<h5 class="mb-2 fw-semibold">Thêm khách hàng</h5>
						<p class="text-muted small mb-0">Đăng ký khách hàng mới</p>
					</div>
				</div>
			</a>
		</div>
		<div class="col-md-3">
			<a asp-page="/DealerManager/Vehicles/Search" class="text-decoration-none">
				<div class="card border-0 shadow-sm h-100 hover-lift">
					<div class="card-body text-center p-4">
						<div class="mb-3">
							<div class="p-3 rounded-circle d-inline-block" style="background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);">
								<i class="fas fa-search fs-2 text-white"></i>
							</div>
						</div>
						<h5 class="mb-2 fw-semibold">Tra cứu xe</h5>
						<p class="text-muted small mb-0">Tìm kiếm sản phẩm</p>
					</div>
				</div>
			</a>
		</div>
	</div>

	<!-- Recent Activities & Stats -->
	<div class="row g-3">
		<div class="col-lg-8">
			<div class="card border-0 shadow-sm">
				<div class="card-header bg-white border-0 py-3">
					<h5 class="mb-0"><i class="fas fa-chart-bar me-2 text-primary"></i>Hoạt động gần đây</h5>
				</div>
				<div class="card-body p-0">
					<div class="list-group list-group-flush">
						@{
							ViewData["IconClass"] = "fas fa-file-invoice";
							ViewData["Title"] = "Báo giá mới được tạo";
							ViewData["Description"] = "Báo giá #BG001 cho khách hàng Nguyễn Văn A";
							ViewData["TimeAgo"] = "5 phút trước";
							ViewData["ColorClass"] = "bg-primary";
						}
						<partial name="_ActivityItem" />
						
						@{
							ViewData["IconClass"] = "fas fa-calendar-check";
							ViewData["Title"] = "Lịch lái thử được xác nhận";
							ViewData["Description"] = "VinFast VF e34 - Khách hàng Trần Thị B";
							ViewData["TimeAgo"] = "1 giờ trước";
							ViewData["ColorClass"] = "bg-success";
						}
						<partial name="_ActivityItem" />
						
						@{
							ViewData["IconClass"] = "fas fa-user-plus";
							ViewData["Title"] = "Khách hàng mới";
							ViewData["Description"] = "Lê Văn C đã được thêm vào hệ thống";
							ViewData["TimeAgo"] = "3 giờ trước";
							ViewData["ColorClass"] = "bg-info";
						}
						<partial name="_ActivityItem" />
						
						@{
							ViewData["IconClass"] = "fas fa-box";
							ViewData["Title"] = "Đơn đặt hàng mới";
							ViewData["Description"] = "Đặt 5 xe VinFast VF 8 từ nhà máy";
							ViewData["TimeAgo"] = "1 ngày trước";
							ViewData["ColorClass"] = "bg-warning";
						}
						<partial name="_ActivityItem" />
					</div>
				</div>
				<div class="card-footer bg-white border-0 text-center py-3">
					<a asp-page="/DealerManager/Reports/Index" class="text-decoration-none small">Xem tất cả <i class="fas fa-arrow-right ms-1"></i></a>
				</div>
			</div>
		</div>

		<div class="col-lg-4">
			<div class="card border-0 shadow-sm mb-3">
				<div class="card-header bg-white border-0 py-3">
					<h5 class="mb-0"><i class="fas fa-tasks me-2 text-warning"></i>Cần xử lý</h5>
				</div>
				<div class="card-body">
					<a asp-page="/DealerManager/TestDrives/Index" class="text-decoration-none">
						<div class="d-flex align-items-center justify-content-between mb-3 pb-3 border-bottom hover-bg-light p-2 rounded">
							<div class="d-flex align-items-center">
								<div class="bg-warning bg-opacity-10 p-2 rounded me-3">
									<i class="fas fa-exclamation-circle text-warning fs-5"></i>
								</div>
								<div>
									<div class="fw-semibold">Lịch lái thử</div>
									<small class="text-muted">Chờ xác nhận</small>
								</div>
							</div>
							@{
								ViewData["status"] = Model.MonthlyTestDrives.ToString();
							}
							<span class="badge bg-warning">@Model.MonthlyTestDrives</span>
						</div>
					</a>
					<a asp-page="/DealerManager/Orders/Index" class="text-decoration-none">
						<div class="d-flex align-items-center justify-content-between hover-bg-light p-2 rounded">
							<div class="d-flex align-items-center">
								<div class="bg-info bg-opacity-10 p-2 rounded me-3">
									<i class="fas fa-shopping-cart text-info fs-5"></i>
								</div>
								<div>
									<div class="fw-semibold">Đơn hàng mới</div>
									<small class="text-muted">Chưa xử lý</small>
								</div>
							</div>
							@{
								var pendingOrders = (int)(Model.MonthlyOrders * 0.15);
							}
							<span class="badge bg-info">@pendingOrders</span>
						</div>
					</a>
				</div>
			</div>

			<div class="card border-0 shadow-sm">
				<div class="card-header bg-white border-0 py-3">
					<h5 class="mb-0"><i class="fas fa-star me-2 text-success"></i>Thống kê tuần</h5>
				</div>
				<div class="card-body">
					<div class="mb-3">
						<div class="d-flex justify-content-between mb-2">
							<small class="fw-semibold">Doanh số</small>
							<small class="fw-semibold text-success vn-currency">75%</small>
						</div>
						<div class="progress" style="height: 8px; border-radius: 4px;">
							<div class="progress-bar" style="width: 75%; background: linear-gradient(90deg, #43e97b 0%, #38f9d7 100%); border-radius: 4px;"></div>
						</div>
					</div>
					<div class="mb-3">
						<div class="d-flex justify-content-between mb-2">
							<small class="fw-semibold">Khách hàng mới</small>
							<small class="fw-semibold text-info vn-currency">60%</small>
						</div>
						<div class="progress" style="height: 8px; border-radius: 4px;">
							<div class="progress-bar" style="width: 60%; background: linear-gradient(90deg, #4facfe 0%, #00f2fe 100%); border-radius: 4px;"></div>
						</div>
					</div>
					<div>
						<div class="d-flex justify-content-between mb-2">
							<small class="fw-semibold">Hoàn thành đơn</small>
							<small class="fw-semibold text-primary vn-currency">88%</small>
						</div>
						<div class="progress" style="height: 8px; border-radius: 4px;">
							<div class="progress-bar" style="width: 88%; background: linear-gradient(90deg, #667eea 0%, #764ba2 100%); border-radius: 4px;"></div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<style>
	.avatar-circle {
		width: 45px;
		height: 45px;
		border-radius: 50%;
		display: flex;
		align-items-center;
		justify-content: center;
		font-weight: 600;
	}
	
	.hover-lift {
		transition: transform 0.2s ease, box-shadow 0.2s ease;
	}
	
	.hover-lift:hover {
		transform: translateY(-5px);
		box-shadow: 0 0.5rem 1.5rem rgba(0,0,0,0.15) !important;
	}

	.hover-bg-light {
		transition: background-color 0.2s ease;
	}

	.hover-bg-light:hover {
		background-color: rgba(0,0,0,0.02);
	}

	.chart-container {
		position: relative;
		height: 300px;
	}
</style>

@section Scripts {
	<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.js"></script>
	<script>
		$(document).ready(function() {
			console.log('Document ready, bắt đầu khởi tạo biểu đồ...');
			
			// Kiểm tra Chart.js có load được không
			if (typeof Chart === 'undefined') {
				console.error('Chart.js chưa được load!');
				return;
			}
			console.log('Chart.js đã load thành công');
			
			// Khởi tạo các biểu đồ
			initSalesChart();
			initOrdersChart();
			initInventoryChart();
			initDebtChart();
		});

		// Biểu đồ doanh số 6 tháng
		async function initSalesChart() {
			try {
				console.log('Đang tải dữ liệu biểu đồ doanh số...');
				const response = await fetch('/DealerManager?handler=SalesChartData');
				console.log('Response status:', response.status);
				const data = await response.json();
				console.log('Dữ liệu nhận được:', data);
				
				const canvas = document.getElementById('salesChart');
				if (!canvas) {
					console.error('Không tìm thấy canvas element với id salesChart');
					return;
				}
				const ctx = canvas.getContext('2d');
				console.log('Đang tạo biểu đồ doanh số...');
				new Chart(ctx, {
					type: 'bar',
					data: {
						labels: data.labels,
						datasets: [{
							label: 'Doanh số (VND)',
							data: data.data.map(item => item.revenue),
							backgroundColor: 'rgba(102, 126, 234, 0.8)',
							borderColor: 'rgba(102, 126, 234, 1)',
							borderWidth: 2,
							borderRadius: 4,
							borderSkipped: false,
						}]
					},
					options: {
						responsive: true,
						maintainAspectRatio: false,
						plugins: {
							legend: {
								display: false
							},
							tooltip: {
								callbacks: {
									label: function(context) {
										return 'Doanh số: ' + new Intl.NumberFormat('vi-VN', {
											style: 'currency',
											currency: 'VND'
										}).format(context.parsed.y);
									}
								}
							}
						},
						scales: {
							y: {
								beginAtZero: true,
								ticks: {
									callback: function(value) {
										return new Intl.NumberFormat('vi-VN', {
											style: 'currency',
											currency: 'VND',
											minimumFractionDigits: 0
										}).format(value);
									}
								}
							}
						}
					}
				});
			} catch (error) {
				console.error('Lỗi tải dữ liệu biểu đồ doanh số:', error);
			}
		}

		// Biểu đồ xu hướng đơn hàng
		async function initOrdersChart() {
			try {
				console.log('Đang tải dữ liệu biểu đồ đơn hàng...');
				const response = await fetch('/DealerManager?handler=OrdersChartData');
				console.log('Orders response status:', response.status);
				const data = await response.json();
				console.log('Orders data:', data);
				
				const ctx = document.getElementById('ordersChart').getContext('2d');
				new Chart(ctx, {
					type: 'line',
					data: {
						labels: data.labels,
						datasets: [{
							label: 'Số đơn hàng',
							data: data.data,
							borderColor: 'rgba(67, 233, 123, 1)',
							backgroundColor: 'rgba(67, 233, 123, 0.1)',
							borderWidth: 3,
							fill: true,
							tension: 0.4,
							pointBackgroundColor: 'rgba(67, 233, 123, 1)',
							pointBorderColor: '#fff',
							pointBorderWidth: 2,
							pointRadius: 6,
							pointHoverRadius: 8
						}]
					},
					options: {
						responsive: true,
						maintainAspectRatio: false,
						plugins: {
							legend: {
								display: false
							}
						},
						scales: {
							y: {
								beginAtZero: true,
								ticks: {
									stepSize: 1
								}
							}
						}
					}
				});
			} catch (error) {
				console.error('Lỗi tải dữ liệu biểu đồ đơn hàng:', error);
			}
		}

		// Biểu đồ phân bổ tồn kho
		async function initInventoryChart() {
			try {
				const response = await fetch('/DealerManager?handler=InventoryChartData');
				const data = await response.json();
				
				const ctx = document.getElementById('inventoryChart').getContext('2d');
				new Chart(ctx, {
					type: 'doughnut',
					data: {
						labels: data.map(item => item.category),
						datasets: [{
							data: data.map(item => item.totalQuantity),
							backgroundColor: [
								'rgba(255, 99, 132, 0.8)',
								'rgba(54, 162, 235, 0.8)',
								'rgba(255, 205, 86, 0.8)',
								'rgba(75, 192, 192, 0.8)',
								'rgba(153, 102, 255, 0.8)',
								'rgba(255, 159, 64, 0.8)',
								'rgba(199, 199, 199, 0.8)',
								'rgba(83, 102, 255, 0.8)'
							],
							borderColor: [
								'rgba(255, 99, 132, 1)',
								'rgba(54, 162, 235, 1)',
								'rgba(255, 205, 86, 1)',
								'rgba(75, 192, 192, 1)',
								'rgba(153, 102, 255, 1)',
								'rgba(255, 159, 64, 1)',
								'rgba(199, 199, 199, 1)',
								'rgba(83, 102, 255, 1)'
							],
							borderWidth: 2
						}]
					},
					options: {
						responsive: true,
						maintainAspectRatio: false,
						plugins: {
							legend: {
								position: 'bottom',
								labels: {
									padding: 20,
									usePointStyle: true
								}
							},
							tooltip: {
								callbacks: {
									label: function(context) {
										const label = context.label || '';
										const value = context.parsed;
										return label + ': ' + value + ' sản phẩm';
									}
								}
							}
						}
					}
				});
			} catch (error) {
				console.error('Lỗi tải dữ liệu biểu đồ tồn kho:', error);
			}
		}

		// Biểu đồ công nợ khách hàng
		async function initDebtChart() {
			try {
				const response = await fetch('/DealerManager?handler=DebtChartData');
				const data = await response.json();
				
				const ctx = document.getElementById('debtChart').getContext('2d');
				new Chart(ctx, {
					type: 'bar',
					data: {
						labels: data.map(item => item.customerName.length > 15 ? 
							item.customerName.substring(0, 15) + '...' : item.customerName),
						datasets: [{
							label: 'Công nợ (VND)',
							data: data.map(item => item.totalDebt),
							backgroundColor: 'rgba(255, 99, 132, 0.8)',
							borderColor: 'rgba(255, 99, 132, 1)',
							borderWidth: 2,
							borderRadius: 4,
							borderSkipped: false,
						}]
					},
					options: {
						responsive: true,
						maintainAspectRatio: false,
						indexAxis: 'y',
						plugins: {
							legend: {
								display: false
							},
							tooltip: {
								callbacks: {
									label: function(context) {
										return 'Công nợ: ' + new Intl.NumberFormat('vi-VN', {
											style: 'currency',
											currency: 'VND'
										}).format(context.parsed.x);
									}
								}
							}
						},
						scales: {
							x: {
								beginAtZero: true,
								ticks: {
									callback: function(value) {
										return new Intl.NumberFormat('vi-VN', {
											style: 'currency',
											currency: 'VND',
											minimumFractionDigits: 0
										}).format(value);
									}
								}
							}
						}
					}
				});
			} catch (error) {
				console.error('Lỗi tải dữ liệu biểu đồ công nợ:', error);
			}
		}
	</script>
}
