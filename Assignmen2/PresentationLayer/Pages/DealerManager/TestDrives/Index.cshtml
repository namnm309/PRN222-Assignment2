@page
@model PresentationLayer.Pages.DealerManager.TestDrives.IndexModel
@{
    Layout = "~/Pages/Shared/_DashboardLayout.cshtml";
    ViewData["Title"] = "Quản lý lái thử";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2 class="mb-1">
            <i class="fas fa-calendar-check me-2 text-primary"></i>
            Quản lý lịch hẹn lái thử
        </h2>
    </div>
    <div>
        <a asp-page="/DealerManager/TestDrives/Create" class="btn btn-primary">
            <i class="fas fa-plus me-1"></i> Tạo lịch hẹn mới
        </a>
    </div>
</div>

<!-- Filter & Search Section -->
<div class="card border-0 shadow-sm mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-3">
                <label class="form-label">Trạng thái</label>
                <select name="Status" class="form-select">
                    <option value="">Tất cả trạng thái</option>
                    <option value="Pending" selected="@(Model.Status == "Pending")">Chờ xác nhận</option>
                    <option value="Successfully" selected="@(Model.Status == "Successfully")">Thành công</option>
                    <option value="Failed" selected="@(Model.Status == "Failed")">Thất bại</option>
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">&nbsp;</label>
                <button type="submit" class="btn btn-primary w-100">
                    <i class="fas fa-search me-1"></i> Lọc
                </button>
            </div>
            <div class="col-md-6 d-flex align-items-end justify-content-end gap-2">
                <span class="badge bg-warning-subtle text-warning"><i class="fas fa-clock me-1"></i> Chờ: @Model.PendingCount</span>
                <span class="badge bg-info-subtle text-info"><i class="fas fa-check-circle me-1"></i> Xác nhận: @Model.ConfirmedCount</span>
                <span class="badge bg-success-subtle text-success"><i class="fas fa-check-double me-1"></i> Hoàn thành: @Model.CompletedCount</span>
                <span class="badge bg-primary"><i class="fas fa-list me-1"></i> Tổng: @Model.TotalTestDrives</span>
            </div>
        </form>
    </div>
</div>

<!-- Test Drives List -->
<div class="card border-0 shadow-sm">
    <div class="card-header bg-white border-0 py-3">
        <h5 class="mb-0">
            <i class="fas fa-calendar-alt me-2 text-primary"></i>
            Danh sách lịch lái thử
        </h5>
    </div>
    <div class="card-body p-0">
        @if (Model.TestDrives != null && Model.TestDrives.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead class="table-light">
                        <tr>
                            <th class="fw-semibold text-muted">Khách hàng</th>
                            <th class="fw-semibold text-muted">Xe điện</th>
                            <th class="fw-semibold text-muted">Thời gian hẹn</th>
                            <th class="fw-semibold text-muted">Trạng thái</th>
                            <th class="fw-semibold text-muted">Ghi chú</th>
                            <th class="fw-semibold text-muted text-center">Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.TestDrives)
                        {
                            <tr>
                                <td>
                                    <div>
                                        <div class="fw-bold">@item.CustomerName</div>
                                        <div class="text-muted small">@item.CustomerPhone</div>
                                    </div>
                                </td>
                                <td>
                                    <div>
                                        <div class="fw-bold">@item.ProductName</div>
                                        <div class="text-muted small">ID: @item.Id.ToString().Substring(0,8).ToUpper()</div>
                                    </div>
                                </td>
                                <td>
                                    <div>
                                        <div class="fw-bold">@item.ScheduledDate.ToString("dd/MM/yyyy")</div>
                                        <div class="text-muted small">@item.ScheduledDate.ToString("HH:mm")</div>
                                    </div>
                                </td>
                                <td>
                                    @{
                                        var statusClass = item.Status.ToString() switch
                                        {
                                            "Pending" => "bg-warning",
                                            "Successfully" => "bg-success",
                                            "Failed" => "bg-danger",
                                            _ => "bg-secondary"
                                        };
                                        var statusText = item.Status.ToString() switch
                                        {
                                            "Pending" => "Chờ xác nhận",
                                            "Successfully" => "Thành công",
                                            "Failed" => "Thất bại",
                                            _ => "Không xác định"
                                        };
                                    }
                                    <span class="badge @statusClass">@statusText</span>
                                </td>
                                <td>
                                    @if (!string.IsNullOrWhiteSpace(item.Notes))
                                    {
                                        <div class="text-muted small" style="max-width: 200px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" title="@item.Notes">
                                            @item.Notes
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td class="text-center align-middle pe-4">
                                    <div class="btn-group btn-group-sm" role="group">
                                        <a asp-page="/DealerManager/TestDrives/Detail" asp-route-id="@item.Id" class="btn btn-outline-primary" title="Xem chi tiết">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <button type="button" class="btn btn-outline-success"
                                                data-bs-toggle="modal"
                                                data-bs-target="#addCustomerModal"
                                                data-customer-name="@item.CustomerName"
                                                data-customer-phone="@item.CustomerPhone"
                                                data-customer-email="@item.CustomerEmail"
                                                title="Đăng ký khách hàng mới">
                                            <i class="fas fa-user-plus"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <div class="mb-3">
                    <i class="fas fa-car fa-3x text-muted"></i>
                </div>
                <h5 class="text-muted">Chưa có lịch lái thử nào</h5>
                <p class="text-muted">Tạo lịch lái thử đầu tiên để bắt đầu</p>
                <a asp-page="/DealerManager/TestDrives/Create" class="btn btn-primary">
                    <i class="fas fa-plus me-1"></i> Tạo lịch lái thử
                </a>
            </div>
        }
    </div>
    
    @* DealerStaff không có phân trang; loại bỏ pagination *@
</div>

<style>
    .avatar-circle {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 700;
        font-size: 16px;
    }
    
    .hover-lift {
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }
    
    .hover-lift:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    }
    
    .table tbody tr {
        border-bottom: 1px solid #f8f9fa;
    }
    
    .table tbody tr:last-child {
        border-bottom: none;
    }
    
    .badge {
        font-size: 0.75rem;
        padding: 0.5rem 0.75rem;
    }
</style>

<!-- Add Customer Modal -->
<div class="modal fade" id="addCustomerModal" tabindex="-1" aria-labelledby="addCustomerModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCustomerModalLabel">
                    <i class="fas fa-user-plus me-2"></i>Tạo khách hàng mới
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addCustomerForm">
                    @Html.AntiForgeryToken()
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label">Tên khách hàng <span class="text-danger">*</span></label>
                            <input type="text" name="name" class="form-control" required>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Số điện thoại <span class="text-danger">*</span></label>
                            <input type="tel" name="phone" class="form-control" required>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Email</label>
                            <input type="email" name="email" class="form-control">
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Địa chỉ</label>
                            <input type="text" name="address" class="form-control">
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Ngày sinh</label>
                            <div class="input-group">
                                <input type="date" name="birthDate" class="form-control">
                                <span class="input-group-text">
                                    <i class="fas fa-calendar"></i>
                                </span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Giới tính</label>
                            <select name="gender" class="form-select">
                                <option value="">Chọn giới tính</option>
                                <option value="Male">Nam</option>
                                <option value="Female">Nữ</option>
                                <option value="Other">Khác</option>
                            </select>
                        </div>
                        <div class="col-12">
                            <label class="form-label">Ghi chú</label>
                            <textarea name="notes" class="form-control" rows="3"></textarea>
                        </div>
                    </div>
                    <div id="customer-error-message" class="alert alert-danger mt-3 d-none" role="alert"></div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-success" id="saveCustomerBtn">
                    <i class="fas fa-save me-1"></i> Lưu khách hàng
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Pre-fill modal
        document.addEventListener('click', function(e) {
            if (e.target.closest('button[data-bs-target="#addCustomerModal"]')) {
                const btn = e.target.closest('button[data-bs-target="#addCustomerModal"]');
                document.querySelector('#addCustomerForm input[name="name"]').value = btn.dataset.customerName || '';
                document.querySelector('#addCustomerForm input[name="phone"]').value = btn.dataset.customerPhone || '';
                document.querySelector('#addCustomerForm input[name="email"]').value = btn.dataset.customerEmail || '';
                // Clear other fields
                document.querySelector('#addCustomerForm input[name="address"]').value = '';
                document.querySelector('#addCustomerForm input[name="birthDate"]').value = '';
                document.querySelector('#addCustomerForm select[name="gender"]').value = '';
                document.querySelector('#addCustomerForm textarea[name="notes"]').value = '';
                document.getElementById('customer-error-message').classList.add('d-none');
            }
        });

        // Handle customer creation
        document.getElementById('saveCustomerBtn').addEventListener('click', function() {
            var form = document.getElementById('addCustomerForm');
            var formData = new FormData(form);
            var errorDiv = document.getElementById('customer-error-message');
            
            errorDiv.classList.add('d-none');
            this.disabled = true;
            this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Đang kiểm tra...';
            
            var phone = formData.get('phone');
            var name = formData.get('name');
            
            // Create FormData for anti-forgery token for CheckCustomer
            var checkData = new FormData();
            checkData.append('phone', phone);
            checkData.append('name', name);
            checkData.append('__RequestVerificationToken', $('input[name="__RequestVerificationToken"]').val());
            
            fetch('/DealerManager/Customers/Create?handler=CheckCustomer', {
                method: 'POST',
                body: checkData
            })
            .then(response => response.json())
            .then(data => {
                if (data.exists) {
                    errorDiv.innerHTML = `
                        <div class="alert alert-warning">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            <strong>Khách hàng đã có thông tin rồi!</strong><br>
                            <small>Tên: ${data.customer.name} | SĐT: ${data.customer.phone} | Email: ${data.customer.email || 'Chưa có'}</small>
                        </div>`;
                    errorDiv.classList.remove('d-none');
                } else {
                    // Customer doesn't exist, create new one
                    fetch('/DealerManager/Customers/Create?handler=CreateCustomer', {
                        method: 'POST',
                        body: formData
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            errorDiv.innerHTML = `
                                <div class="alert alert-success">
                                    <i class="fas fa-check-circle me-2"></i>
                                    <strong>Tạo khách hàng thành công!</strong><br>
                                    <small>Tên: ${data.customer.name} | SĐT: ${data.customer.phone} | Email: ${data.customer.email || 'Chưa có'}</small>
                                </div>`;
                            errorDiv.classList.remove('d-none');
                            setTimeout(() => {
                                var modal = bootstrap.Modal.getInstance(document.getElementById('addCustomerModal'));
                                modal.hide();
                                form.reset();
                                errorDiv.classList.add('d-none');
                                location.reload(); // Reload to show updated data
                            }, 2000);
                        } else {
                            errorDiv.innerHTML = `<div class="alert alert-danger"><i class="fas fa-exclamation-triangle me-2"></i> ${data.message}</div>`;
                            errorDiv.classList.remove('d-none');
                        }
                    })
                    .catch(error => {
                        errorDiv.innerHTML = `<div class="alert alert-danger"><i class="fas fa-exclamation-triangle me-2"></i> Có lỗi xảy ra khi tạo khách hàng. Vui lòng thử lại.</div>`;
                        errorDiv.classList.remove('d-none');
                        console.error('Error creating customer:', error);
                    });
                }
            })
            .catch(error => {
                errorDiv.innerHTML = `<div class="alert alert-danger"><i class="fas fa-exclamation-triangle me-2"></i> Có lỗi xảy ra khi kiểm tra khách hàng. Vui lòng thử lại.</div>`;
                errorDiv.classList.remove('d-none');
                console.error('Error checking customer:', error);
            })
            .finally(() => {
                this.disabled = false;
                this.innerHTML = '<i class="fas fa-save me-1"></i> Lưu khách hàng';
            });
        });
    </script>
}