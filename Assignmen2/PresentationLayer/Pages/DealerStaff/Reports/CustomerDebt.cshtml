@page
@model PresentationLayer.Pages.DealerStaff.Reports.CustomerDebtModel
@{
    Layout = "~/Pages/Shared/_DashboardLayout.cshtml";
    ViewData["Title"] = "Báo cáo công nợ khách hàng";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2 class="mb-1">
            <i class="fas fa-exclamation-triangle me-2 text-warning"></i>
            Báo cáo công nợ khách hàng
        </h2>
        <p class="text-muted mb-0">Theo dõi và quản lý công nợ khách hàng</p>
    </div>
    <div>
        <button type="button" class="btn btn-outline-primary" onclick="exportReport()">
            <i class="fas fa-download me-1"></i> Xuất báo cáo
        </button>
    </div>
</div>

<!-- Filter Section -->
<div class="card border-0 shadow-sm mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-3">
                <label class="form-label">Tìm kiếm</label>
                <input type="text" name="search" value="@Model.Search" class="form-control" placeholder="Tên khách hàng, email...">
            </div>
            <div class="col-md-3">
                <label class="form-label">Trạng thái công nợ</label>
                <select name="debtStatus" class="form-select">
                    <option value="">Tất cả</option>
                    <option value="NoDebt" selected="@(Model.DebtStatus == "NoDebt")">Không nợ</option>
                    <option value="HasDebt" selected="@(Model.DebtStatus == "HasDebt")">Có nợ</option>
                    <option value="Overdue" selected="@(Model.DebtStatus == "Overdue")">Quá hạn</option>
                    <option value="HighDebt" selected="@(Model.DebtStatus == "HighDebt")">Nợ cao</option>
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">Khoảng nợ</label>
                <select name="debtRange" class="form-select">
                    <option value="">Tất cả</option>
                    <option value="0-10M" selected="@(Model.DebtRange == "0-10M")">0 - 10 triệu</option>
                    <option value="10M-50M" selected="@(Model.DebtRange == "10M-50M")">10 - 50 triệu</option>
                    <option value="50M-100M" selected="@(Model.DebtRange == "50M-100M")">50 - 100 triệu</option>
                    <option value="100M+" selected="@(Model.DebtRange == "100M+")">Trên 100 triệu</option>
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">&nbsp;</label>
                <button type="submit" class="btn btn-primary w-100">
                    <i class="fas fa-search"></i> Lọc
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Summary Cards -->
<div class="row g-3 mb-4">
    <div class="col-md-3">
        <div class="card border-0 shadow-sm">
            <div class="card-body text-center">
                <div class="text-muted small">Tổng công nợ</div>
                <div class="h4 text-danger">@Model.TotalDebt.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card border-0 shadow-sm">
            <div class="card-body text-center">
                <div class="text-muted small">Khách hàng có nợ</div>
                <div class="h4 text-warning">@Model.CustomersWithDebt</div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card border-0 shadow-sm">
            <div class="card-body text-center">
                <div class="text-muted small">Nợ quá hạn</div>
                <div class="h4 text-danger">@Model.OverdueDebt.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card border-0 shadow-sm">
            <div class="card-body text-center">
                <div class="text-muted small">Tỷ lệ thu hồi</div>
                <div class="h4 text-success">@Model.CollectionRate.ToString("F1")%</div>
            </div>
        </div>
    </div>
</div>

<!-- Debt Chart -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card border-0 shadow-sm">
            <div class="card-header bg-light">
                <h6 class="mb-0">
                    <i class="fas fa-chart-pie me-2"></i>
                    Phân bố công nợ theo mức độ
                </h6>
            </div>
            <div class="card-body">
                <canvas id="debtChart" height="100"></canvas>
            </div>
        </div>
    </div>
</div>

<!-- Customer Debt Table -->
@if (Model.DebtData != null && Model.DebtData.Any())
{
    <div class="card border-0 shadow-sm">
        <div class="card-header bg-light">
            <h6 class="mb-0">
                <i class="fas fa-table me-2"></i>
                Chi tiết công nợ khách hàng
            </h6>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>Khách hàng</th>
                            <th>Số đơn hàng</th>
                            <th>Tổng mua</th>
                            <th>Đã thanh toán</th>
                            <th>Công nợ</th>
                            <th>Trạng thái</th>
                            <th>Ngày nợ cũ nhất</th>
                            <th width="120">Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.DebtData)
                        {
                            <tr class="@(item.DebtAmount > 0 ? "table-warning" : "")">
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="avatar-sm bg-primary text-white rounded-circle d-flex align-items-center justify-content-center me-3">
                                            @item.CustomerName.Substring(0, 1).ToUpper()
                                        </div>
                                        <div>
                                            <div class="fw-bold">@item.CustomerName</div>
                                            <div class="text-muted small">@item.CustomerEmail</div>
                                            <div class="text-muted small">@item.CustomerPhone</div>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <span class="badge bg-info fs-6">@item.OrderCount đơn</span>
                                </td>
                                <td>
                                    <div class="fw-bold">@item.TotalPurchased.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</div>
                                </td>
                                <td>
                                    <div class="text-success">@item.TotalPaid.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</div>
                                </td>
                                <td>
                                    <div class="fw-bold @(item.DebtAmount > 0 ? "text-danger" : "text-success")">
                                        @item.DebtAmount.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))
                                    </div>
                                </td>
                                <td>
                                    @if (item.DebtAmount == 0)
                                    {
                                        <span class="badge bg-success">Không nợ</span>
                                    }
                                    else if (item.DebtAmount > 100000000)
                                    {
                                        <span class="badge bg-danger">Nợ cao</span>
                                    }
                                    else if (item.OldestDebtDate.HasValue && item.OldestDebtDate.Value < DateTime.Now.AddDays(-30))
                                    {
                                        <span class="badge bg-warning">Quá hạn</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning">Có nợ</span>
                                    }
                                </td>
                                <td>
                                    @if (item.OldestDebtDate.HasValue)
                                    {
                                        <div class="text-muted small">@item.OldestDebtDate.Value.ToString("dd/MM/yyyy")</div>
                                        <div class="text-muted small">@((DateTime.Now - item.OldestDebtDate.Value).Days) ngày</div>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group-vertical btn-group-sm" role="group">
                                        <a asp-page="/DealerStaff/Customers/Detail" asp-route-id="@item.CustomerId" class="btn btn-outline-primary btn-sm">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        @if (item.DebtAmount > 0)
                                        {
                                            <a asp-page="/DealerStaff/Payments/Create" asp-route-customerId="@item.CustomerId" class="btn btn-outline-success btn-sm">
                                                <i class="fas fa-money-bill"></i>
                                            </a>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
else
{
    <div class="text-center py-5">
        <i class="fas fa-exclamation-triangle fa-3x text-muted mb-3"></i>
        <h5 class="text-muted">Không có dữ liệu công nợ</h5>
        <p class="text-muted">Không có thông tin công nợ khách hàng</p>
    </div>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Debt Chart
        const ctx = document.getElementById('debtChart').getContext('2d');
        const debtChart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ['Không nợ', 'Nợ thấp (< 10M)', 'Nợ trung bình (10-50M)', 'Nợ cao (> 50M)'],
                datasets: [{
                    data: [@Model.NoDebtCount, @Model.LowDebtCount, @Model.MediumDebtCount, @Model.HighDebtCount],
                    backgroundColor: [
                        'rgba(40, 167, 69, 0.8)',
                        'rgba(255, 193, 7, 0.8)',
                        'rgba(255, 152, 0, 0.8)',
                        'rgba(220, 53, 69, 0.8)'
                    ],
                    borderColor: [
                        'rgba(40, 167, 69, 1)',
                        'rgba(255, 193, 7, 1)',
                        'rgba(255, 152, 0, 1)',
                        'rgba(220, 53, 69, 1)'
                    ],
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const percentage = ((context.parsed / total) * 100).toFixed(1);
                                return context.label + ': ' + context.parsed + ' khách hàng (' + percentage + '%)';
                            }
                        }
                    }
                }
            }
        });

        function exportReport() {
            // TODO: Implement export functionality
            alert('Chức năng xuất báo cáo sẽ được triển khai');
        }
    </script>
}
