@page
@model PresentationLayer.Pages.DealerStaff.TestDrive.IndexModel
@{
    Layout = "~/Pages/Shared/_DashboardLayout.cshtml";
    ViewData["Title"] = "Quản lý lịch hẹn lái thử";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2 class="mb-1">
            <i class="fas fa-calendar-check me-2 text-primary"></i>
            Quản lý lịch hẹn lái thử
        </h2>
    </div>
    <div>
        <a asp-page="/DealerStaff/TestDrive/Create" class="btn btn-primary">
            <i class="fas fa-plus me-1"></i> Tạo lịch hẹn mới
        </a>
    </div>
</div>

<!-- Filter Section -->
<div class="card border-0 shadow-sm mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-3">
                <label class="form-label">Trạng thái</label>
                <select name="status" class="form-select">
                    <option value="">Tất cả trạng thái</option>
                    <option value="Pending" selected="@(Model.Status == "Pending")">Chờ xác nhận</option>
                    <option value="Successfully" selected="@(Model.Status == "Successfully")">Thành công</option>
                    <option value="Failed" selected="@(Model.Status == "Failed")">Thất bại</option>
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">Từ ngày</label>
                <input type="date" name="fromDate" value="@Model.FromDate?.ToString("yyyy-MM-dd")" class="form-control">
            </div>
            <div class="col-md-3">
                <label class="form-label">Đến ngày</label>
                <input type="date" name="toDate" value="@Model.ToDate?.ToString("yyyy-MM-dd")" class="form-control">
            </div>
            <div class="col-md-3">
                <label class="form-label">&nbsp;</label>
                <button type="submit" class="btn btn-primary w-100">
                    <i class="fas fa-search me-1"></i> Lọc
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Test Drive List -->
@if (Model.TestDrives != null && Model.TestDrives.Any())
{
    <div class="card border-0 shadow-sm">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>Khách hàng</th>
                            <th>Xe lái thử</th>
                            <th>Thời gian hẹn</th>
                            <th>Trạng thái</th>
                            <th>Ghi chú</th>
                            <th width="120">Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var testDrive in Model.TestDrives)
                        {
                            <tr>
                                <td>
                                    <div>
                                        <div class="fw-bold">@testDrive.CustomerName</div>
                                        <div class="text-muted small">@testDrive.CustomerPhone</div>
                                        @if (!string.IsNullOrWhiteSpace(testDrive.CustomerEmail))
                                        {
                                            <div class="text-muted small">@testDrive.CustomerEmail</div>
                                        }
                                    </div>
                                </td>
                                <td>
                                    <div>
                                        <div class="fw-bold">@testDrive.ProductName</div>
                                        <div class="text-muted small">SKU: @testDrive.ProductId</div>
                                    </div>
                                </td>
                                <td>
                                    <div>
                                        <div class="fw-bold">@testDrive.ScheduledDate.ToString("dd/MM/yyyy")</div>
                                        <div class="text-muted small">@testDrive.ScheduledDate.ToString("HH:mm")</div>
                                    </div>
                                </td>
                                <td>
                                    @{
                                        var statusClass = testDrive.Status switch
                                        {
                                            BusinessLayer.Enums.TestDriveStatus.Pending => "bg-warning",
                                            BusinessLayer.Enums.TestDriveStatus.Successfully => "bg-success",
                                            BusinessLayer.Enums.TestDriveStatus.Failed => "bg-danger",
                                            _ => "bg-secondary"
                                        };
                                        var statusText = testDrive.Status switch
                                        {
                                            BusinessLayer.Enums.TestDriveStatus.Pending => "Chờ xác nhận",
                                            BusinessLayer.Enums.TestDriveStatus.Successfully => "Thành công",
                                            BusinessLayer.Enums.TestDriveStatus.Failed => "Thất bại",
                                            _ => "Không xác định"
                                        };
                                    }
                                    <span class="badge @statusClass">@statusText</span>
                                </td>
                                <td>
                                    @if (!string.IsNullOrWhiteSpace(testDrive.Notes))
                                    {
                                        <div class="text-muted small" style="max-width: 200px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" title="@testDrive.Notes">
                                            @testDrive.Notes
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group-vertical btn-group-sm" role="group">
                                        <a asp-page="/DealerStaff/TestDrive/Detail" asp-route-id="@testDrive.Id" class="btn btn-outline-primary btn-sm" title="Xem chi tiết">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <button type="button" class="btn btn-outline-success btn-sm" 
                                                data-bs-toggle="modal" 
                                                data-bs-target="#addCustomerModal"
                                                data-customer-name="@testDrive.CustomerName"
                                                data-customer-phone="@testDrive.CustomerPhone"
                                                data-customer-email="@testDrive.CustomerEmail"
                                                title="Đăng ký khách hàng mới">
                                            <i class="fas fa-user-plus"></i>
                                        </button>
                                        @if (testDrive.Status == BusinessLayer.Enums.TestDriveStatus.Pending)
                                        {
                                            <form method="post" asp-page-handler="Confirm" asp-route-id="@testDrive.Id" style="display: inline;" onsubmit="return confirmAction('Xác nhận lái thử này?')">
                                                <button type="submit" class="btn btn-outline-success btn-sm" title="Xác nhận">
                                                    <i class="fas fa-check"></i>
                                                </button>
                                            </form>
                                        }
                                        @* Nút Complete không còn cần thiết vì Confirm đã chuyển trực tiếp sang Successfully *@
                                        @if (testDrive.Status != BusinessLayer.Enums.TestDriveStatus.Failed && testDrive.Status != BusinessLayer.Enums.TestDriveStatus.Successfully)
                                        {
                                            <form method="post" asp-page-handler="Cancel" asp-route-id="@testDrive.Id" style="display: inline;" onsubmit="return confirmAction('Hủy lái thử này?')">
                                                <button type="submit" class="btn btn-outline-danger btn-sm" title="Hủy">
                                                    <i class="fas fa-times"></i>
                                                </button>
                                            </form>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Statistics -->
    <div class="row mt-4">
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <div class="text-muted small">Tổng lịch hẹn</div>
                    <div class="h4 text-primary">@Model.TestDrives.Count</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <div class="text-muted small">Chờ xác nhận</div>
                    <div class="h4 text-warning">@Model.TestDrives.Count(t => t.Status == BusinessLayer.Enums.TestDriveStatus.Pending)</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <div class="text-muted small">Thất bại</div>
                    <div class="h4 text-danger">@Model.TestDrives.Count(t => t.Status == BusinessLayer.Enums.TestDriveStatus.Failed)</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <div class="text-muted small">Thành công</div>
                    <div class="h4 text-success">@Model.TestDrives.Count(t => t.Status == BusinessLayer.Enums.TestDriveStatus.Successfully)</div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="text-center py-5">
        <i class="fas fa-calendar-times fa-3x text-muted mb-3"></i>
        <h5 class="text-muted">Không có lịch hẹn nào</h5>
        <p class="text-muted">Chưa có lịch hẹn lái thử nào được tạo</p>
        <a asp-page="/DealerStaff/TestDrive/Create" class="btn btn-primary">
            <i class="fas fa-plus me-1"></i> Tạo lịch hẹn đầu tiên
        </a>
    </div>
}

<!-- Add Customer Modal -->
<div class="modal fade" id="addCustomerModal" tabindex="-1" aria-labelledby="addCustomerModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCustomerModalLabel">
                    <i class="fas fa-user-plus me-2"></i>Tạo khách hàng mới
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addCustomerForm">
                    @Html.AntiForgeryToken()
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label">Tên khách hàng <span class="text-danger">*</span></label>
                            <input type="text" name="name" class="form-control" required>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Số điện thoại <span class="text-danger">*</span></label>
                            <input type="tel" name="phone" class="form-control" required>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Email</label>
                            <input type="email" name="email" class="form-control">
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Địa chỉ</label>
                            <input type="text" name="address" class="form-control">
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Ngày sinh</label>
                            <input type="date" name="dateOfBirth" class="form-control">
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Giới tính</label>
                            <select name="gender" class="form-select">
                                <option value="">Chọn giới tính</option>
                                <option value="Male">Nam</option>
                                <option value="Female">Nữ</option>
                                <option value="Other">Khác</option>
                            </select>
                        </div>
                        <div class="col-12">
                            <label class="form-label">Ghi chú</label>
                            <textarea name="notes" class="form-control" rows="3"></textarea>
                        </div>
                    </div>
                    <div id="customer-error-message" class="alert alert-danger mt-3 d-none" role="alert"></div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-success" id="saveCustomerBtn">
                    <i class="fas fa-save me-1"></i> Lưu khách hàng
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Handle Add Customer button click from test drive rows
        document.addEventListener('click', function(e) {
            if (e.target.closest('button[data-bs-target="#addCustomerModal"]')) {
                var button = e.target.closest('button[data-bs-target="#addCustomerModal"]');
                var customerName = button.getAttribute('data-customer-name');
                var customerPhone = button.getAttribute('data-customer-phone');
                var customerEmail = button.getAttribute('data-customer-email');
                
                // Pre-fill the form with customer data from test drive
                var form = document.getElementById('addCustomerForm');
                form.querySelector('input[name="name"]').value = customerName || '';
                form.querySelector('input[name="phone"]').value = customerPhone || '';
                form.querySelector('input[name="email"]').value = customerEmail || '';
                
                // Clear any previous error messages
                document.getElementById('customer-error-message').classList.add('d-none');
            }
        });

        // Handle Add Customer
        document.getElementById('saveCustomerBtn').addEventListener('click', function() {
            var form = document.getElementById('addCustomerForm');
            var formData = new FormData(form);
            var errorDiv = document.getElementById('customer-error-message');
            
            // Hide previous errors
            errorDiv.classList.add('d-none');
            
            // Disable button during request
            this.disabled = true;
            this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Đang kiểm tra...';
            
            // First check if customer exists
            var phone = formData.get('phone');
            var name = formData.get('name');
            
            // Create FormData for anti-forgery token
            var checkData = new FormData();
            checkData.append('phone', phone);
            checkData.append('name', name);
            checkData.append('__RequestVerificationToken', $('input[name="__RequestVerificationToken"]').val());
            
            fetch('/DealerStaff/Customers/Create?handler=CheckCustomer', {
                method: 'POST',
                body: checkData
            })
            .then(response => response.json())
            .then(data => {
                if (data.exists) {
                    // Customer already exists
                    errorDiv.innerHTML = `
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        <strong>Khách hàng đã có thông tin rồi!</strong><br>
                        <small>Tên: ${data.customer.name} | SĐT: ${data.customer.phone} | Email: ${data.customer.email || 'Chưa có'}</small>
                    `;
                    errorDiv.classList.remove('d-none');
                } else {
                    // Customer doesn't exist, create new one
                    fetch('/DealerStaff/Customers/Create?handler=CreateCustomer', {
                        method: 'POST',
                        body: formData
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Success - show success message and close modal
                            errorDiv.innerHTML = `
                                <div class="alert alert-success">
                                    <i class="fas fa-check-circle me-2"></i>
                                    <strong>Tạo khách hàng thành công!</strong><br>
                                    <small>Khách hàng: ${data.customer.name} - ${data.customer.phone}</small>
                                </div>
                            `;
                            errorDiv.classList.remove('d-none');
                            
                            // Close modal after 2 seconds
                            setTimeout(() => {
                                var modal = bootstrap.Modal.getInstance(document.getElementById('addCustomerModal'));
                                modal.hide();
                                form.reset();
                                errorDiv.classList.add('d-none');
                            }, 2000);
                        } else {
                            // Show error
                            errorDiv.innerHTML = `<i class="fas fa-exclamation-triangle me-2"></i> ${data.message}`;
                            errorDiv.classList.remove('d-none');
                        }
                    })
                    .catch(error => {
                        errorDiv.innerHTML = '<i class="fas fa-times-circle me-2"></i> Có lỗi xảy ra khi tạo khách hàng. Vui lòng thử lại.';
                        errorDiv.classList.remove('d-none');
                    });
                }
            })
            .catch(error => {
                errorDiv.innerHTML = '<i class="fas fa-times-circle me-2"></i> Có lỗi xảy ra khi kiểm tra khách hàng. Vui lòng thử lại.';
                errorDiv.classList.remove('d-none');
            })
            .finally(() => {
                // Re-enable button
                this.disabled = false;
                this.innerHTML = '<i class="fas fa-save me-1"></i> Lưu khách hàng';
            });
        });

        // Reset error message when modal is closed
        document.getElementById('addCustomerModal').addEventListener('hidden.bs.modal', function() {
            document.getElementById('customer-error-message').classList.add('d-none');
            document.getElementById('addCustomerForm').reset();
        });

        // Function to confirm actions
        function confirmAction(message) {
            return confirm(message);
        }
    </script>
}
