@page
@model Assignmen2.PresentationLayer.Pages.DealerStaff.TestDrive.DetailModel
@{
    ViewData["Title"] = "Chi tiết lịch lái thử";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h4 class="mb-0">
            <i class="fas fa-calendar-check text-primary me-2"></i>
            Chi tiết lịch lái thử
        </h4>
        <p class="text-muted mb-0">Thông tin chi tiết về lịch hẹn lái thử</p>
    </div>
    <div>
        <a asp-page="/DealerStaff/TestDrive/Index" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left me-1"></i>
            Quay lại
        </a>
    </div>
</div>

@if (Model.TestDrive != null)
{
    <div class="row">
        <!-- Thông tin chính -->
        <div class="col-lg-8">
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header bg-white">
                    <h5 class="mb-0">
                        <i class="fas fa-info-circle text-primary me-2"></i>
                        Thông tin lịch hẹn
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label fw-bold text-muted">ID Lịch hẹn</label>
                                <div class="form-control-plaintext">@Model.TestDrive.Id</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label fw-bold text-muted">Trạng thái</label>
                                <div>
                                    @{
                                        var statusClass = Model.TestDrive.Status switch
                                        {
                                            DataAccessLayer.Enum.TestDriveStatus.Pending => "bg-warning",
                                            DataAccessLayer.Enum.TestDriveStatus.Successfully => "bg-success",
                                            DataAccessLayer.Enum.TestDriveStatus.Failed => "bg-danger",
                                            _ => "bg-secondary"
                                        };
                                        var statusText = Model.TestDrive.Status switch
                                        {
                                            DataAccessLayer.Enum.TestDriveStatus.Pending => "Chờ xác nhận",
                                            DataAccessLayer.Enum.TestDriveStatus.Successfully => "Thành công",
                                            DataAccessLayer.Enum.TestDriveStatus.Failed => "Thất bại",
                                            _ => "Không xác định"
                                        };
                                    }
                                    <span class="badge @statusClass fs-6">@statusText</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label fw-bold text-muted">Ngày hẹn</label>
                                <div class="form-control-plaintext">
                                    <i class="fas fa-calendar text-primary me-1"></i>
                                    @Model.TestDrive.ScheduledDate.ToString("dd/MM/yyyy")
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label fw-bold text-muted">Giờ hẹn</label>
                                <div class="form-control-plaintext">
                                    <i class="fas fa-clock text-primary me-1"></i>
                                    @Model.TestDrive.ScheduledDate.ToString("HH:mm")
                                </div>
                            </div>
                        </div>
                    </div>

                    @if (!string.IsNullOrWhiteSpace(Model.TestDrive.Notes))
                    {
                        <div class="mb-3">
                            <label class="form-label fw-bold text-muted">Ghi chú</label>
                            <div class="form-control-plaintext bg-light p-3 rounded">
                                <i class="fas fa-sticky-note text-primary me-1"></i>
                                @Model.TestDrive.Notes
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Thông tin khách hàng -->
        <div class="col-lg-4">
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header bg-white">
                    <h5 class="mb-0">
                        <i class="fas fa-user text-success me-2"></i>
                        Thông tin khách hàng
                    </h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label fw-bold text-muted">Tên khách hàng</label>
                        <div class="form-control-plaintext">
                            <i class="fas fa-user text-success me-1"></i>
                            @Model.TestDrive.CustomerName
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label fw-bold text-muted">Số điện thoại</label>
                        <div class="form-control-plaintext">
                            <i class="fas fa-phone text-success me-1"></i>
                            <a href="tel:@Model.TestDrive.CustomerPhone" class="text-decoration-none">
                                @Model.TestDrive.CustomerPhone
                            </a>
                        </div>
                    </div>
                    
                    @if (!string.IsNullOrWhiteSpace(Model.TestDrive.CustomerEmail))
                    {
                        <div class="mb-3">
                            <label class="form-label fw-bold text-muted">Email</label>
                            <div class="form-control-plaintext">
                                <i class="fas fa-envelope text-success me-1"></i>
                                <a href="mailto:@Model.TestDrive.CustomerEmail" class="text-decoration-none">
                                    @Model.TestDrive.CustomerEmail
                                </a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Thông tin xe -->
    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white">
                    <h5 class="mb-0">
                        <i class="fas fa-car text-info me-2"></i>
                        Thông tin xe lái thử
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label fw-bold text-muted">Tên xe</label>
                                <div class="form-control-plaintext">
                                    <i class="fas fa-car text-info me-1"></i>
                                    @Model.TestDrive.Product?.Name ?? "Không có thông tin"
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label fw-bold text-muted">SKU</label>
                                <div class="form-control-plaintext">
                                    <code>@Model.TestDrive.ProductId</code>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Thao tác -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white">
                    <h5 class="mb-0">
                        <i class="fas fa-cogs text-warning me-2"></i>
                        Thao tác
                    </h5>
                </div>
                <div class="card-body">
                    <div class="d-flex gap-2 flex-wrap">
                        @if (Model.TestDrive.Status == DataAccessLayer.Enum.TestDriveStatus.Pending)
                        {
                            <form method="post" asp-page-handler="Confirm" asp-route-id="@Model.TestDrive.Id" style="display: inline;" onsubmit="return confirm('Xác nhận lái thử này?')">
                                <button type="submit" class="btn btn-success">
                                    <i class="fas fa-check me-1"></i>
                                    Xác nhận
                                </button>
                            </form>
                        }
                        
                        @if (Model.TestDrive.Status != DataAccessLayer.Enum.TestDriveStatus.Failed && Model.TestDrive.Status != DataAccessLayer.Enum.TestDriveStatus.Successfully)
                        {
                            <form method="post" asp-page-handler="Cancel" asp-route-id="@Model.TestDrive.Id" style="display: inline;" onsubmit="return confirm('Hủy lái thử này?')">
                                <button type="submit" class="btn btn-danger">
                                    <i class="fas fa-times me-1"></i>
                                    Hủy
                                </button>
                            </form>
                        }
                        
                        <button type="button" class="btn btn-outline-success" 
                                data-bs-toggle="modal" 
                                data-bs-target="#addCustomerModal"
                                data-customer-name="@Model.TestDrive.CustomerName"
                                data-customer-phone="@Model.TestDrive.CustomerPhone"
                                data-customer-email="@Model.TestDrive.CustomerEmail"
                                title="Đăng ký khách hàng mới">
                            <i class="fas fa-user-plus me-1"></i>
                            Đăng ký khách hàng
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="alert alert-warning">
        <i class="fas fa-exclamation-triangle me-2"></i>
        Không tìm thấy thông tin lịch hẹn lái thử.
    </div>
}

<!-- Modal đăng ký khách hàng -->
<div class="modal fade" id="addCustomerModal" tabindex="-1" aria-labelledby="addCustomerModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCustomerModalLabel">
                    <i class="fas fa-user-plus text-success me-2"></i>
                    Đăng ký khách hàng mới
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="addCustomerForm">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="customerName" class="form-label">Tên khách hàng <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="customerName" name="name" required>
                    </div>
                    <div class="mb-3">
                        <label for="customerPhone" class="form-label">Số điện thoại <span class="text-danger">*</span></label>
                        <input type="tel" class="form-control" id="customerPhone" name="phone" required>
                    </div>
                    <div class="mb-3">
                        <label for="customerEmail" class="form-label">Email</label>
                        <input type="email" class="form-control" id="customerEmail" name="email">
                    </div>
                    <div id="customer-error-message" class="d-none"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                    <button type="button" class="btn btn-success" id="saveCustomerBtn">
                        <i class="fas fa-save me-1"></i>
                        Lưu khách hàng
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Pre-fill form when modal opens
        document.addEventListener('click', function(e) {
            if (e.target.closest('button[data-bs-target="#addCustomerModal"]')) {
                var button = e.target.closest('button[data-bs-target="#addCustomerModal"]');
                var customerName = button.getAttribute('data-customer-name');
                var customerPhone = button.getAttribute('data-customer-phone');
                var customerEmail = button.getAttribute('data-customer-email');
                
                // Pre-fill the form with customer data from test drive
                var form = document.getElementById('addCustomerForm');
                form.querySelector('input[name="name"]').value = customerName;
                form.querySelector('input[name="phone"]').value = customerPhone;
                if (customerEmail) {
                    form.querySelector('input[name="email"]').value = customerEmail;
                } else {
                    form.querySelector('input[name="email"]').value = '';
                }
            }
        });

        // Handle customer creation
        document.getElementById('saveCustomerBtn').addEventListener('click', function() {
            var form = document.getElementById('addCustomerForm');
            var formData = new FormData(form);
            var errorDiv = document.getElementById('customer-error-message');
            
            errorDiv.classList.add('d-none');
            this.disabled = true;
            this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Đang kiểm tra...';
            
            var phone = formData.get('phone');
            var name = formData.get('name');
            
            // Create FormData for anti-forgery token for CheckCustomer
            var checkData = new FormData();
            checkData.append('phone', phone);
            checkData.append('name', name);
            checkData.append('__RequestVerificationToken', $('input[name="__RequestVerificationToken"]').val());
            
            fetch('/DealerStaff/Customers/Create?handler=CheckCustomer', {
                method: 'POST',
                body: checkData
            })
            .then(response => response.json())
            .then(data => {
                if (data.exists) {
                    errorDiv.innerHTML = `
                        <div class="alert alert-warning">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            <strong>Khách hàng đã có thông tin rồi!</strong><br>
                            <small>Tên: ${data.customer.name} | SĐT: ${data.customer.phone} | Email: ${data.customer.email || 'Chưa có'}</small>
                        </div>`;
                    errorDiv.classList.remove('d-none');
                } else {
                    // Customer doesn't exist, create new one
                    fetch('/DealerStaff/Customers/Create?handler=CreateCustomer', {
                        method: 'POST',
                        body: formData
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            errorDiv.innerHTML = `
                                <div class="alert alert-success">
                                    <i class="fas fa-check-circle me-2"></i>
                                    <strong>Tạo khách hàng thành công!</strong><br>
                                    <small>Tên: ${data.customer.name} | SĐT: ${data.customer.phone} | Email: ${data.customer.email || 'Chưa có'}</small>
                                </div>`;
                            errorDiv.classList.remove('d-none');
                            setTimeout(() => {
                                var modal = bootstrap.Modal.getInstance(document.getElementById('addCustomerModal'));
                                modal.hide();
                                form.reset();
                                errorDiv.classList.add('d-none');
                            }, 2000);
                        } else {
                            errorDiv.innerHTML = `<div class="alert alert-danger"><i class="fas fa-exclamation-triangle me-2"></i> ${data.message}</div>`;
                            errorDiv.classList.remove('d-none');
                        }
                    })
                    .catch(error => {
                        errorDiv.innerHTML = `<div class="alert alert-danger"><i class="fas fa-exclamation-triangle me-2"></i> Có lỗi xảy ra khi tạo khách hàng. Vui lòng thử lại.</div>`;
                        errorDiv.classList.remove('d-none');
                        console.error('Error creating customer:', error);
                    });
                }
            })
            .catch(error => {
                errorDiv.innerHTML = `<div class="alert alert-danger"><i class="fas fa-exclamation-triangle me-2"></i> Có lỗi xảy ra khi kiểm tra khách hàng. Vui lòng thử lại.</div>`;
                errorDiv.classList.remove('d-none');
                console.error('Error checking customer:', error);
            })
            .finally(() => {
                this.disabled = false;
                this.innerHTML = '<i class="fas fa-save me-1"></i> Lưu khách hàng';
            });
        });
    </script>
}
