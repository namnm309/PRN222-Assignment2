@page
@model PresentationLayer.Pages.DealerStaff.TestDriveSchedule.IndexModel
@{
    Layout = "~/Pages/Shared/_DashboardLayout.cshtml";
    ViewData["Title"] = "Lịch chạy thử khách hàng";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2 class="mb-1">
            <i class="fas fa-calendar-alt me-2 text-primary"></i>
            Lịch chạy thử khách hàng
        </h2>
        <p class="text-muted mb-0">Truy vấn và theo dõi lịch chạy thử của khách hàng</p>
    </div>
    <div>
        <a asp-page="/DealerStaff/TestDrive/Create" class="btn btn-primary">
            <i class="fas fa-plus me-1"></i> Tạo lịch hẹn mới
        </a>
    </div>
</div>

<!-- Filter Section -->
<div class="card border-0 shadow-sm mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-3">
                <label class="form-label">Tìm kiếm</label>
                <input type="text" name="search" value="@Model.Search" class="form-control" placeholder="Tên khách hàng, email, số điện thoại...">
            </div>
            <div class="col-md-2">
                <label class="form-label">Trạng thái</label>
                <select name="status" class="form-select">
                    <option value="">Tất cả</option>
                    <option value="Pending" selected="@(Model.Status == "Pending")">Chờ xác nhận</option>
                    <option value="Confirmed" selected="@(Model.Status == "Confirmed")">Đã xác nhận</option>
                    <option value="Successfully" selected="@(Model.Status == "Successfully")">Thành công</option>
                    <option value="Failed" selected="@(Model.Status == "Failed")">Thất bại</option>
                    <option value="Canceled" selected="@(Model.Status == "Canceled")">Đã hủy</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">Từ ngày</label>
                <input type="date" name="fromDate" value="@Model.FromDate?.ToString("yyyy-MM-dd")" class="form-control">
            </div>
            <div class="col-md-2">
                <label class="form-label">Đến ngày</label>
                <input type="date" name="toDate" value="@Model.ToDate?.ToString("yyyy-MM-dd")" class="form-control">
            </div>
            <div class="col-md-2">
                <label class="form-label">Xe</label>
                <select name="productId" class="form-select">
                    <option value="">Tất cả xe</option>
                    @if (Model.Products != null)
                    {
                        @foreach (var product in Model.Products)
                        {
                            <option value="@product.Id" selected="@(Model.ProductId == product.Id)">@product.Name</option>
                        }
                    }
                </select>
            </div>
            <div class="col-md-1">
                <label class="form-label">&nbsp;</label>
                <button type="submit" class="btn btn-primary w-100">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Calendar View Toggle -->
<div class="row mb-4">
    <div class="col-12">
        <div class="btn-group" role="group">
            <button type="button" class="btn btn-outline-primary active" id="listViewBtn" onclick="toggleView('list')">
                <i class="fas fa-list me-1"></i> Danh sách
            </button>
            <button type="button" class="btn btn-outline-primary" id="calendarViewBtn" onclick="toggleView('calendar')">
                <i class="fas fa-calendar me-1"></i> Lịch
            </button>
        </div>
    </div>
</div>

<!-- List View -->
<div id="listView">
    @if (Model.TestDrives != null && Model.TestDrives.Any())
    {
        <div class="card border-0 shadow-sm">
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>Khách hàng</th>
                                <th>Xe lái thử</th>
                                <th>Thời gian hẹn</th>
                                <th>Trạng thái</th>
                                <th>Ghi chú</th>
                                <th width="120">Thao tác</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var testDrive in Model.TestDrives)
                            {
                                <tr>
                                    <td>
                                        <div>
                                            <div class="fw-bold">@(testDrive.Customer?.FullName ?? testDrive.CustomerName)</div>
                                            <div class="text-muted small">
                                                @(testDrive.Customer?.PhoneNumber ?? testDrive.CustomerPhone)
                                            </div>
                                            @if (!string.IsNullOrWhiteSpace(testDrive.Customer?.Email ?? testDrive.CustomerEmail))
                                            {
                                                <div class="text-muted small">@(testDrive.Customer?.Email ?? testDrive.CustomerEmail)</div>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        <div>
                                            <div class="fw-bold">@testDrive.Product?.Name</div>
                                            <div class="text-muted small">@testDrive.Product?.Brand?.Name</div>
                                            <div class="text-muted small">SKU: @testDrive.Product?.Sku</div>
                                        </div>
                                    </td>
                                    <td>
                                        <div>
                                            <div class="fw-bold">@testDrive.ScheduledDate.ToString("dd/MM/yyyy")</div>
                                            <div class="text-muted small">@testDrive.ScheduledDate.ToString("HH:mm")</div>
                                        </div>
                                    </td>
                                    <td>
                                        @{
                                            var statusClass = testDrive.Status switch
                                            {
                                                DataAccessLayer.Enum.TestDriveStatus.Pending => "bg-warning",
                                                DataAccessLayer.Enum.TestDriveStatus.Confirmed => "bg-info",
                                                DataAccessLayer.Enum.TestDriveStatus.Successfully => "bg-success",
                                                DataAccessLayer.Enum.TestDriveStatus.Failed => "bg-danger",
                                                DataAccessLayer.Enum.TestDriveStatus.Canceled => "bg-secondary",
                                                _ => "bg-secondary"
                                            };
                                            var statusText = testDrive.Status switch
                                            {
                                                DataAccessLayer.Enum.TestDriveStatus.Pending => "Chờ xác nhận",
                                                DataAccessLayer.Enum.TestDriveStatus.Confirmed => "Đã xác nhận",
                                                DataAccessLayer.Enum.TestDriveStatus.Successfully => "Thành công",
                                                DataAccessLayer.Enum.TestDriveStatus.Failed => "Thất bại",
                                                DataAccessLayer.Enum.TestDriveStatus.Canceled => "Đã hủy",
                                                _ => "Không xác định"
                                            };
                                        }
                                        <span class="badge @statusClass">@statusText</span>
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrWhiteSpace(testDrive.Notes))
                                        {
                                            <div class="text-muted small" style="max-width: 200px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;" title="@testDrive.Notes">
                                                @testDrive.Notes
                                            </div>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group-vertical btn-group-sm" role="group">
                                            <a asp-page="/DealerStaff/TestDrive/Detail" asp-route-id="@testDrive.Id" class="btn btn-outline-primary btn-sm">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            @if (testDrive.Status == DataAccessLayer.Enum.TestDriveStatus.Pending)
                                            {
                                                <a asp-page="/DealerStaff/TestDrive/Confirm" asp-route-id="@testDrive.Id" class="btn btn-outline-success btn-sm">
                                                    <i class="fas fa-check"></i>
                                                </a>
                                            }
                                            @if (testDrive.Status == DataAccessLayer.Enum.TestDriveStatus.Confirmed)
                                            {
                                                <a asp-page="/DealerStaff/TestDrive/Complete" asp-route-id="@testDrive.Id" class="btn btn-outline-info btn-sm">
                                                    <i class="fas fa-flag-checkered"></i>
                                                </a>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <i class="fas fa-calendar-times fa-3x text-muted mb-3"></i>
            <h5 class="text-muted">Không có lịch hẹn nào</h5>
            <p class="text-muted">Không có lịch hẹn lái thử nào trong khoảng thời gian đã chọn</p>
        </div>
    }
</div>

<!-- Calendar View -->
<div id="calendarView" style="display: none;">
    <div class="card border-0 shadow-sm">
        <div class="card-header bg-light">
            <h6 class="mb-0">
                <i class="fas fa-calendar me-2"></i>
                Lịch chạy thử
            </h6>
        </div>
        <div class="card-body">
            <div id="calendar"></div>
        </div>
    </div>
</div>

<!-- Statistics -->
@if (Model.TestDrives != null && Model.TestDrives.Any())
{
    <div class="row mt-4">
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <div class="text-muted small">Tổng lịch hẹn</div>
                    <div class="h4 text-primary">@Model.TestDrives.Count</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <div class="text-muted small">Chờ xác nhận</div>
                    <div class="h4 text-warning">@Model.TestDrives.Count(t => t.Status == DataAccessLayer.Enum.TestDriveStatus.Pending)</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <div class="text-muted small">Đã xác nhận</div>
                    <div class="h4 text-info">@Model.TestDrives.Count(t => t.Status == DataAccessLayer.Enum.TestDriveStatus.Confirmed)</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-0 shadow-sm">
                <div class="card-body text-center">
                    <div class="text-muted small">Thành công</div>
                    <div class="h4 text-success">@Model.TestDrives.Count(t => t.Status == DataAccessLayer.Enum.TestDriveStatus.Successfully)</div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>
    <script>
        let calendar;

        function toggleView(view) {
            const listView = document.getElementById('listView');
            const calendarView = document.getElementById('calendarView');
            const listBtn = document.getElementById('listViewBtn');
            const calendarBtn = document.getElementById('calendarViewBtn');

            if (view === 'list') {
                listView.style.display = 'block';
                calendarView.style.display = 'none';
                listBtn.classList.add('active');
                calendarBtn.classList.remove('active');
            } else {
                listView.style.display = 'none';
                calendarView.style.display = 'block';
                listBtn.classList.remove('active');
                calendarBtn.classList.add('active');
                
                if (!calendar) {
                    initCalendar();
                }
            }
        }

        function initCalendar() {
            const calendarEl = document.getElementById('calendar');
            calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                locale: 'vi',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                events: [
                    @if (Model.TestDrives != null)
                    {
                        @foreach (var testDrive in Model.TestDrives)
                        {
                            var color = testDrive.Status switch
                            {
                                DataAccessLayer.Enum.TestDriveStatus.Pending => "#ffc107",
                                DataAccessLayer.Enum.TestDriveStatus.Confirmed => "#17a2b8",
                                DataAccessLayer.Enum.TestDriveStatus.Successfully => "#28a745",
                                DataAccessLayer.Enum.TestDriveStatus.Failed => "#dc3545",
                                DataAccessLayer.Enum.TestDriveStatus.Canceled => "#6c757d",
                                _ => "#6c757d"
                            };
                            <text>
                            {
                                title: '@(testDrive.Customer?.FullName ?? testDrive.CustomerName) - @testDrive.Product?.Name',
                                start: '@testDrive.ScheduledDate.ToString("yyyy-MM-ddTHH:mm:ss")',
                                color: '@color',
                                extendedProps: {
                                    status: '@testDrive.Status',
                                    customer: '@(testDrive.Customer?.FullName ?? testDrive.CustomerName)',
                                    product: '@testDrive.Product?.Name',
                                    notes: '@(testDrive.Notes ?? "")'
                                }
                            },
                            </text>
                        }
                    }
                ],
                eventClick: function(info) {
                    const event = info.event;
                    const extendedProps = event.extendedProps;
                    
                    alert(`Khách hàng: ${extendedProps.customer}\nXe: ${extendedProps.product}\nTrạng thái: ${extendedProps.status}\nGhi chú: ${extendedProps.notes}`);
                }
            });
            calendar.render();
        }
    </script>
}
